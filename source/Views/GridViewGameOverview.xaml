<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                    mc:Ignorable="d">

    <Style TargetType="{x:Type GridViewGameOverview}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewGameOverview}">
					<ScrollViewer Name="GameOverviewFullScrollViewer"
							HorizontalScrollBarVisibility="Disabled"
							VerticalScrollBarVisibility="Auto"
							Style="{DynamicResource DetailsScrollViewer}">
						<Border Padding="10,0,5,0" BorderBrush="{DynamicResource PanelSeparatorBrush}"
								d:DataContext="{x:Static DesignMainViewModel.DesignSelectedGameDetailsIntance}">
							<Border.Style>
								<Style TargetType="Border">
									<Setter Property="BorderThickness" Value="1,0,0,0" />
									<Style.Triggers>
										<DataTrigger Binding="{Settings GridViewDetailsPosition}" Value="Left">
											<Setter Property="BorderThickness" Value="0,0,1,0" />
										</DataTrigger>
										<DataTrigger Binding="{Settings ShowPanelSeparators}" Value="False">
											<Setter Property="BorderThickness" Value="0" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</Border.Style>
							<DockPanel>
									
								<TextBlock Text="{DynamicResource LOCErrorNoGameSelected}" 
									Margin="0,20,0,0" DockPanel.Dock="Top"
									HorizontalAlignment="Center" VerticalAlignment="Center">
									<TextBlock.Style>
										<Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}">
											<Setter Property="Visibility" Value="Collapsed" />
											<Style.Triggers>
												<Trigger Property="DataContext" Value="{x:Null}">
													<Setter Property="Visibility" Value="Visible" />
												</Trigger>
											</Style.Triggers>
										</Style>
									</TextBlock.Style>
								</TextBlock>

								<Grid Name="VideoControlExtra">
									<WrapPanel>
										<WrapPanel.Style>
											<Style TargetType="{x:Type WrapPanel}">
												<Setter Property="Visibility" Value="Visible" />
												<Style.Triggers>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{PluginSettings Plugin=BackgroundChanger, Path=HasDataBackground, FallbackValue=False}" Value="True" />
															<Condition Binding="{PluginSettings Plugin=BackgroundChanger, Path=EnableBackgroundImage, FallbackValue=False}" Value="True" />
														</MultiDataTrigger.Conditions>
														<Setter Property="Visibility" Value="Collapsed" />
													</MultiDataTrigger>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=EnableAlternativeDetailsVideoPlayer, FallbackValue=False}" Value="True" />
															<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsVideoPlaying, FallbackValue=False}" Value="True" />
														</MultiDataTrigger.Conditions>
														<Setter Property="Visibility" Value="Collapsed" />
													</MultiDataTrigger>
												</Style.Triggers>
											</Style>
										</WrapPanel.Style>
										<FadeImage x:Name="PART_ImageBackground" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Top">
											<FadeImage.ImageOpacityMask>
												<RadialGradientBrush GradientOrigin="0.5,0" Center="0.5,0" RadiusX="2" RadiusY="{DynamicResource GridViewBackgroundBlur}">
													<RadialGradientBrush.GradientStops>
														<GradientStop Color="Black" Offset="0.3" />
														<GradientStop Color="Transparent" Offset="1" />
													</RadialGradientBrush.GradientStops>
												</RadialGradientBrush>
											</FadeImage.ImageOpacityMask>
										</FadeImage>
									</WrapPanel>									
									
									<WrapPanel>
										<WrapPanel.Style>
											<Style TargetType="{x:Type WrapPanel}">
												<Setter Property="Visibility" Value="Visible" />
												<Style.Triggers>
													<MultiDataTrigger>
														<MultiDataTrigger.Conditions>
															<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=EnableAlternativeDetailsVideoPlayer, FallbackValue=False}" Value="True" />
															<Condition Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsVideoPlaying, FallbackValue=False}" Value="True" />
														</MultiDataTrigger.Conditions>
														<Setter Property="Visibility" Value="Collapsed" />
													</MultiDataTrigger>
												</Style.Triggers>
											</Style>
										</WrapPanel.Style>
										<ContentControl x:Name="BackgroundChanger_PluginBackgroundImage" HorizontalAlignment="Center" VerticalAlignment="Top" />
									</WrapPanel>
									
									<Grid>
										<Grid.OpacityMask>
											<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,0.95" >
												<GradientStop Color="Black" Offset="0.85"/>
												<GradientStop Color="Transparent" Offset="1.0"/>
											</LinearGradientBrush>
										</Grid.OpacityMask>
										<Grid.Style>
											<Style TargetType="Grid">
												<Setter Property="Visibility" Value="Visible" />
												<Style.Triggers>
													<DataTrigger Binding="{Binding ElementName=VideoPlaybackToggleButton, Path=IsChecked}" Value="False">
														<Setter Property="Visibility" Value="Collapsed" />
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</Grid.Style>
									<ContentControl x:Name="ExtraMetadataLoader_VideoLoaderControl" Height="Auto" VerticalAlignment="Top" HorizontalAlignment="Center"/>
									</Grid>

									<Grid HorizontalAlignment="Stretch" Margin="0,0,20,0">
										<Grid.RowDefinitions>				
											<RowDefinition Height="auto"/>
											<RowDefinition Height="*"/>
										</Grid.RowDefinitions>
										<Grid Width="{Binding ElementName=Container,Path=ActualWidth}" Grid.Row="0">
											<Grid.Style>
												<Style TargetType="Grid">
													<Setter Property="Opacity" Value="1"/>
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition Binding="{Binding ElementName=VideoPlaybackToggleButton, Path=IsChecked}" Value="True"/>
																<Condition Binding="{Binding ElementName=LogoCoverFadeToggleButton, Path=IsChecked}" Value="True"/>
																<Condition Binding="{Binding ElementName=VideoControlExtra, Path=IsMouseOver}" Value="False"/>
															</MultiDataTrigger.Conditions>
															<MultiDataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.5" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </MultiDataTrigger.EnterActions>
                                                        <MultiDataTrigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.5" />
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </MultiDataTrigger.ExitActions>
															<Setter Property="Opacity" Value="0"/>
														</MultiDataTrigger>
													</Style.Triggers>
												</Style>
											</Grid.Style>
											<Grid.Effect>
												<DropShadowEffect ShadowDepth="0" Direction="0" BlurRadius="8" Opacity="0.4" />
											</Grid.Effect>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*"/>
												<ColumnDefinition Width="Auto" />
											</Grid.ColumnDefinitions>
											<Grid.RowDefinitions>
												<RowDefinition Height="*"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<WrapPanel Width="{Binding ElementName=Container,Path=ActualWidth}" Grid.Row="0" Grid.Column="0" Margin="8,8,4,0">
												<WrapPanel.Resources>
													<Style TargetType="{x:Type CheckBox}">
														<Setter Property="Padding" Value="0" />
														<Setter Property="Width" Value="30" />
														<Setter Property="Height" Value="30" />
														<Setter Property="Margin" Value="5,0,0,0" />
														<Setter Property="Cursor" Value="Hand" />
														<Setter Property="Template">
															<Setter.Value>
																<ControlTemplate>
																	<Border  BorderBrush="Transparent">
																		<Grid>
																			<Label Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="21"
																				VerticalAlignment="Stretch" HorizontalAlignment="Center" Cursor="Hand"
																				Foreground="{DynamicResource ButtonBackgroundBrush}" Name="MainCheckIcon"
																			/>
																		</Grid>
																	</Border>                                                   
																	<ControlTemplate.Triggers>
																		<Trigger Property="IsMouseOver" Value="True">
																			<Setter Property="Foreground" Value="{DynamicResource GlyphBrush}" TargetName="MainCheckIcon" />
																		</Trigger>
																	</ControlTemplate.Triggers>
																</ControlTemplate>
															</Setter.Value>
														</Setter>
														<Style.Triggers>
															<DataTrigger Binding="{Binding ElementName=VideoPlaybackToggleButton, Path=IsChecked}" Value="True">
																<Setter Property="Margin" Value="5,40,0,-40" />
															</DataTrigger>
															<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=VideoControlsVerticalAlignment, FallbackValue=Bottom}" Value="Bottom">
																<Setter Property="Margin" Value="5,0,0,0" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</WrapPanel.Resources>
												<CheckBox ToolTip="{DynamicResource LOCGridViewQuickSettingsHover}" Name="QuickConfigsCheck" />

												<WrapPanel Margin="0,3,0,2">
													<WrapPanel.Style>
														<Style TargetType="WrapPanel">
															<Setter Property="Visibility" Value="Visible" />
															<Style.Triggers>
																<DataTrigger Binding="{Binding ElementName=QuickConfigsCheck, Path=IsChecked}" Value="False">
																	<Setter Property="Visibility" Value="Collapsed" />
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</WrapPanel.Style>
													<WrapPanel.Resources>
														<Style TargetType="{x:Type CheckBox}">
															<Setter Property="Padding" Value="0" />
															<Setter Property="Width" Value="30" />
															<Setter Property="Height" Value="30" />
															<Setter Property="Cursor" Value="Hand" />
															<Setter Property="Margin" Value="5,4,0,0" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate>
																		<Border  BorderThickness="{DynamicResource BorderThickness}"                         
																			CornerRadius="{DynamicResource ControlCornerRadius}" Style="{DynamicResource HighlightBorder}"
																			BorderBrush="{DynamicResource BorderBrush}" Background="{DynamicResource ButtonBackgroundBrush}">                                                       
																			<Grid>
																				<Label Content="{TemplateBinding Tag}" FontFamily="{StaticResource FontIcoFont}" FontSize="18"
																					VerticalAlignment="Stretch" HorizontalAlignment="Center" Cursor="Hand"
																					Foreground="{DynamicResource GlyphBrush}" Name="MainCheckIcon"
																				/>
																				<Label Content="" Name="CheckedIcon"
																					FontSize="12" Margin="17,17,0,0"
																					FontFamily="{StaticResource FontIcoFont}"                                                                     
																					Foreground="{DynamicResource TextBrushDark}"
																					HorizontalAlignment="Center" VerticalAlignment="Center"
																				/>
																			</Grid>
																		</Border>                                                   
																		<ControlTemplate.Triggers>
																			<Trigger Property="IsMouseOver" Value="True">
																				<Setter Property="Foreground" Value="{DynamicResource TextBrush}" TargetName="MainCheckIcon" />
																				<Setter Property="Foreground" Value="{DynamicResource HighlightGlyphBrush}" TargetName="CheckedIcon" />
																			</Trigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
															<Style.Triggers>
																<DataTrigger Binding="{Binding ElementName=VideoPlaybackToggleButton, Path=IsChecked}" Value="True">
																	<Setter Property="Margin" Value="5,44,0,-40" />
																</DataTrigger>
																<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=VideoControlsVerticalAlignment, FallbackValue=Bottom}" Value="Bottom">
																	<Setter Property="Margin" Value="5,0,0,0" />
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</WrapPanel.Resources>
													<CheckBox ToolTip="{DynamicResource LOCGameViewCoverVisibility}" Name="GdCoverCheck" Tag=""
														IsChecked="{DynamicResource GridUseItmCovers}"/>
													<CheckBox ToolTip="{DynamicResource LOCGameViewBannerVisibility}" Name="GdBannerCheck" Tag=""
														IsChecked="{DynamicResource GridUseItmBanners}">
														<CheckBox.Style>
															<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
																<Setter Property="Control.Visibility" Value="Visible"/>
																<Style.Triggers>
																	<DataTrigger Binding="{Binding ElementName=GdCoverCheck, Path=IsChecked}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</CheckBox.Style>
													</CheckBox>
													<CheckBox ToolTip="{DynamicResource LOCGameViewBannerText}" Name="GdImageCheck" Tag=""
														IsChecked="{DynamicResource GridUseItmImageBanners}" >
														<CheckBox.Style>
															<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
																<Setter Property="Control.Visibility" Value="Visible"/>
																<Style.Triggers>
																	<DataTrigger Binding="{Binding ElementName=GdCoverCheck, Path=IsChecked}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding ElementName=GdBannerCheck, Path=IsChecked}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</CheckBox.Style>
													</CheckBox>
													<CheckBox ToolTip="{DynamicResource LOCGameViewBannerPosition}" Name="GdBannerPosCheck" Tag=""
														IsChecked="{DynamicResource GridUseItmHorizontalBanner}" >
														<CheckBox.Style>
															<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
																<Setter Property="Control.Visibility" Value="Visible"/>
																<Style.Triggers>
																	<DataTrigger Binding="{Binding ElementName=GdCoverCheck, Path=IsChecked}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding ElementName=GdBannerCheck, Path=IsChecked}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</CheckBox.Style>
													</CheckBox>
													<CheckBox ToolTip="{DynamicResource LOCGameViewLibraryBanners}" Name="GdStoreCheck" Tag=""
														IsChecked="{DynamicResource GridUseItmStoreBanners}" >
														<CheckBox.Style>
															<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
																<Setter Property="Control.Visibility" Value="Visible"/>
																<Style.Triggers>
																	<DataTrigger Binding="{Binding ElementName=GdCoverCheck, Path=IsChecked}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding ElementName=GdBannerCheck, Path=IsChecked}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</CheckBox.Style>
													</CheckBox>
													<CheckBox ToolTip="{DynamicResource LOCGameViewLibraryIcons}" Name="GdIconCheck" Tag=""
														IsChecked="{DynamicResource GridUseItmIconBanners}" >
														<CheckBox.Style>
															<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
																<Setter Property="Control.Visibility" Value="Visible"/>
																<Style.Triggers>
																	<DataTrigger Binding="{Binding ElementName=GdCoverCheck, Path=IsChecked}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{Binding ElementName=GdBannerCheck, Path=IsChecked}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</CheckBox.Style>
													</CheckBox>
													<CheckBox ToolTip="{DynamicResource LOCGameViewLogoVisibility}" Name="GdLogoCheck" Tag=""
														IsChecked="{DynamicResource GridLogoVisible}" >
														<CheckBox.Style>
															<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
																<Setter Property="Control.Visibility" Value="Visible"/>
																<Style.Triggers>
																	<DataTrigger Binding="{PluginStatus Plugin=ExtraMetadataLoader_705fdbca-e1fc-4004-b839-1d040b8b4429, Status=Installed}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=EnableLogos}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsLogoAvailable}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</CheckBox.Style>
													</CheckBox>
													<CheckBox ToolTip="{DynamicResource LOCGameViewTitleVisibility}" Name="GdTitleCheck" Tag=""
														IsChecked="{DynamicResource GridTitleVisible}" >
													</CheckBox>
													<CheckBox ToolTip="{DynamicResource LOCGameViewPlayCountVisibility}" Name="GdPlayCountCheck" Tag=""
														IsChecked="{DynamicResource GridPlayCount}" >
													</CheckBox>
													<CheckBox ToolTip="{DynamicResource LOCGameViewFeaturesPosition}" Name="GdFeaturesCheck" Tag="" 
														IsChecked="{DynamicResource GridThFeaturesAtTop}" >
														<CheckBox.Style>
															<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
																<Setter Property="Control.Visibility" Value="Visible"/>
																<Style.Triggers>
																	<DataTrigger Binding="{PluginStatus Plugin=playnite-librarymanagement-plugin, Status=Installed}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=EnableIntegrationFeatures}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=HasData}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</CheckBox.Style>
													</CheckBox>
													<CheckBox ToolTip="{DynamicResource LOCGameViewHLTBVisibility}" Name="GdHLTBCheck" Tag="" 
														IsChecked="{DynamicResource GridHLTBLabelsVisible}" >
														<CheckBox.Style>
															<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
																<Setter Property="Control.Visibility" Value="Visible"/>
																<Style.Triggers>
																	<DataTrigger Binding="{PluginStatus Plugin=playnite-howlongtobeat-plugin, Status=Installed}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=EnableIntegrationProgressBar}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=HasData}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</CheckBox.Style>
													</CheckBox>  
													<CheckBox ToolTip="{DynamicResource LOCGameViewSuccessStoryLists}" Name="GdSuccesCompactCheck" Tag="" 
														IsChecked="{DynamicResource GridSuccessToggleCompact}" >
														<CheckBox.Style>
															<Style TargetType="CheckBox" BasedOn="{StaticResource {x:Type CheckBox}}">
																<Setter Property="Control.Visibility" Value="Visible"/>
																<Style.Triggers>
																	<DataTrigger Binding="{PluginStatus Plugin=playnite-successstory-plugin, Status=Installed}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="False">
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</DataTrigger>
																	<MultiDataTrigger>
																		<MultiDataTrigger.Conditions>
																			<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationCompact}" Value="False"/>
																			<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationCompactLocked}" Value="False"/>
																			<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationCompactUnlocked}" Value="False"/>
																		</MultiDataTrigger.Conditions>
																		<Setter Property="Control.Visibility" Value="Collapsed"/>
																	</MultiDataTrigger>
																</Style.Triggers>
															</Style>
														</CheckBox.Style>
													</CheckBox>
												</WrapPanel>
												<WrapPanel >
													<WrapPanel.Style>
														<Style TargetType="WrapPanel">
															<Setter Property="Margin" Value="0,0,0,0" />
															<Setter Property="Visibility" Value="Visible" />
															<Style.Triggers>
																<DataTrigger Binding="{Binding ElementName=VideoPlaybackToggleButton, Path=IsChecked}" Value="True">
																	<Setter Property="Margin" Value="0,40,0,-40" />
																</DataTrigger>
																<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=VideoControlsVerticalAlignment, FallbackValue=Bottom}" Value="Bottom">
																	<Setter Property="Margin" Value="0,0,0,0" />
																</DataTrigger>
																<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=IsAnyVideoAvailable, FallbackValue=False}" Value="False">
																	<Setter Property="Visibility" Value="Collapsed" />
																</DataTrigger>
																<DataTrigger Binding="{PluginSettings Plugin=ExtraMetadataLoader, Path=EnableVideoPlayer, FallbackValue=False}" Value="False">
																	<Setter Property="Visibility" Value="Collapsed" />
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</WrapPanel.Style>
													<ToggleButton FontSize="40" x:Name="LogoCoverFadeToggleButton" Margin="9,0,0,0"
														Style="{DynamicResource DetailsViewLogoCoverIsFaded}" VerticalAlignment="Center" HorizontalAlignment="Left" 
														IsChecked="{DynamicResource DetailsViewIsLogoCoverFaded}"/>
													<ToggleButton FontSize="40" x:Name="VideoPlaybackToggleButton" Margin="7,0,0,0"
														Style="{DynamicResource VideoPlaybackToggleButton}" VerticalAlignment="Center" HorizontalAlignment="Left" 
														IsChecked="{DynamicResource DetailsViewIsVideoPlayedByDefault}"/>
												</WrapPanel>
											</WrapPanel>
											
											<CheckBox Name="DetailsFeaturesTopPanelVideoPlaying" IsChecked="{DynamicResource FeaturesTopPanelVideoPlaying}" Visibility="Collapsed" />
											<StackPanel Grid.Row="0" Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Top">
												<Grid HorizontalAlignment="Right" Margin="4,8,6,0" >
													<Grid.Style>
														<Style>
															<Setter Property="Control.Visibility" Value="Visible" />
															<Style.Triggers>
																<DataTrigger Binding="{Binding ElementName=GdFeaturesCheck, Path=IsChecked}" Value="False">
																	<Setter Property="Control.Visibility" Value="Collapsed" />
																</DataTrigger>
																<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=DataCount}" Value="0">
																	<Setter Property="Control.Visibility" Value="Collapsed" />
																</DataTrigger>
																<DataTrigger Binding="{PluginStatus Plugin=playnite-librarymanagement-plugin, Status=Installed}" Value="False">
																	<Setter Property="Control.Visibility" Value="Collapsed" />
																</DataTrigger>
																<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=EnableIntegrationFeatures}" Value="False">
																	<Setter Property="Control.Visibility" Value="Collapsed" />
																</DataTrigger>
																<MultiDataTrigger>
																	<MultiDataTrigger.Conditions>
																		<Condition Binding="{Binding ElementName=VideoPlaybackToggleButton, Path=IsChecked}" Value="True"/>
																		<Condition Binding="{Binding ElementName=DetailsFeaturesTopPanelVideoPlaying, Path=IsChecked}" Value="False"/>
																	</MultiDataTrigger.Conditions>
																	<Setter Property="Control.Visibility" Value="Collapsed"/>
																</MultiDataTrigger>
															</Style.Triggers>
														</Style>
													</Grid.Style>
													<Border Background="{DynamicResource WindowBackgourndBrush}" 
														Opacity="{DynamicResource GridFeatureTopPanelOpacity}" 
														CornerRadius="{DynamicResource ControlCornerRadius}"
														Margin="-6,-0,-6,-1"
													/>
													<ContentControl x:Name="LibraryManagement_PluginFeaturesIconList" Height="35"/>
												</Grid>
												
												<Button 
													Margin="15,6,4,0" Padding="2" Cursor="Hand" ToolTip="{DynamicResource LOCClose}" 
													Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="12"
													Command="{MainViewModel CloseGameSideBarCommand}"
													Height="25" Width="25" />
											</StackPanel>
										</Grid>

										<DockPanel DockPanel.Dock="Top" Grid.Row="1" >
											<DockPanel.Style>
												<Style TargetType="DockPanel">
													<Style.Triggers>
														<Trigger Property="DataContext" Value="{x:Null}">
															<Setter Property="Visibility" Value="Collapsed" />
														</Trigger>
													</Style.Triggers>
												</Style>
											</DockPanel.Style>
											
											<DockPanel DockPanel.Dock="Top" HorizontalAlignment="Stretch">                                    
												<Grid Margin="16,8,16,4"  Width="{Binding ElementName=Container,Path=ActualWidth}">
													<Grid.Style>
														<Style TargetType="Grid">
															<Setter Property="Opacity" Value="1" />
															<Style.Triggers>
																<DataTrigger Binding="{Binding ElementName=LogoCoverFadeToggleButton,Path=IsChecked}" Value="True">
																	<DataTrigger.EnterActions>
																		<BeginStoryboard>
																			<Storyboard>
																				<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:1" />
																			</Storyboard>
																		</BeginStoryboard>
																	</DataTrigger.EnterActions>
																	<DataTrigger.ExitActions>
																		<BeginStoryboard>
																			<Storyboard>
																				<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:1" />
																			</Storyboard>
																		</BeginStoryboard>
																	</DataTrigger.ExitActions>
																</DataTrigger>
															</Style.Triggers>
														</Style>
													</Grid.Style>
													<Grid.Effect>
														<DropShadowEffect ShadowDepth="0" Direction="0" BlurRadius="8" Opacity="0.4" />
													</Grid.Effect>
													<StackPanel >
														<Grid Margin="0,0,0,-11"  Width="{Binding ElementName=Container,Path=ActualWidth}">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto"/>
																<ColumnDefinition Width="*"/>
																<ColumnDefinition Width="Auto"/>
															</Grid.ColumnDefinitions>
															
															<Grid Grid.Column="0" VerticalAlignment="Bottom"  Height="{Binding ElementName=eMixedGridViewTopPanel, Path=Value}">
															</Grid>
															
															<Grid Grid.Column="0" VerticalAlignment="Bottom" Margin="5,0,12,12">
																<Grid.Style>
																	<Style TargetType="Grid">
																		<Setter Property="Visibility" Value="Visible" />
																		<Style.Triggers>
																			<DataTrigger Binding="{Binding ElementName=GdCoverCheck, Path=IsChecked}" Value="False">
																				<Setter Property="Visibility" Value="Collapsed" />
																			</DataTrigger>
																		</Style.Triggers>
																	</Style>
																</Grid.Style>
																
																<TextBlock Name="PlatformSpecIdBannerPath" 
																	Tag="{Binding Game.Platforms[0].SpecificationId}"  Visibility="Collapsed">
																	<TextBlock.Style>
																		<Style TargetType="TextBlock">
																			<Setter Property="Text">
																				<Setter.Value>
																					<MultiBinding StringFormat="{}{0}{1}{2}">
																						<Binding Source="../Images/Banners/PlatformsDefault/"/>
																						<Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
																						<Binding Source=".png" />
																					</MultiBinding>
																				</Setter.Value>
																			</Setter>
																		</Style>
																	</TextBlock.Style>
																</TextBlock>
																<TextBlock Name="PlatformNameBannerPath" 
																	Tag="{Binding Game.Platforms[0].Name}"  Visibility="Collapsed">
																	<TextBlock.Style>
																		<Style TargetType="TextBlock">
																			<Setter Property="Text">
																				<Setter.Value>
																					<MultiBinding StringFormat="{}{0}{1}{2}">
																						<Binding Source="../Images/Banners/PlatformsExtra/"/>
																						<Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
																						<Binding Source=".png" />
																					</MultiBinding>
																				</Setter.Value>
																			</Setter>
																		</Style>
																	</TextBlock.Style>
																</TextBlock>
																<TextBlock Name="SourceNameBannerPath" 
																	Tag="{Binding Game.Source.Name}"  Visibility="Collapsed">
																	<TextBlock.Style>
																		<Style TargetType="TextBlock">
																			<Setter Property="Text">
																				<Setter.Value>
																					<MultiBinding StringFormat="{}{0}{1}{2}">
																						<Binding Source="../Images/Banners/Stores/"/>
																						<Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
																						<Binding Source=".png" />
																					</MultiBinding>
																				</Setter.Value>
																			</Setter>
																		</Style>
																	</TextBlock.Style>
																</TextBlock>
																<TextBlock Name="SourceNameIconPath"
																	Tag="{Binding Game.Source.Name}"  Visibility="Collapsed">
																	<TextBlock.Style>
																		<Style TargetType="TextBlock">
																			<Setter Property="Text">
																				<Setter.Value>
																					<MultiBinding StringFormat="{}{0}{1}{2}">
																						<Binding Source="../Images/Icons/Stores/"/>
																						<Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
																						<Binding Source=".png" />
																					</MultiBinding>
																				</Setter.Value>
																			</Setter>
																		</Style>
																	</TextBlock.Style>
																</TextBlock>
																<StackPanel >
																	<Grid Tag="{Binding ElementName=GdBannerCheck, Path=IsChecked}"
																		Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}">
																		<Grid  Width="Auto" Height="{Binding ElementName=eMixedGridBannerHeight, Path=Value}" Tag="{Binding ElementName=GdBannerPosCheck, Path=IsChecked}"
																			Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}">
																			<Border Background="{DynamicResource ButtonBackgroundBrush}" Opacity=".9" />
																			<CheckBox Name="UsePlayniteBanner" IsChecked="{DynamicResource PlayniteBannerVisibility}" Visibility="Collapsed" />
																			<TextBlock FontSize="13" Margin="6,0,0,0"
																				HorizontalAlignment="{DynamicResource TextBannerHorizontalAlignment}" VerticalAlignment="Center"
																				Foreground="{DynamicResource GlyphBrush}" >
																					<TextBlock.Effect>
																						<DropShadowEffect ShadowDepth="3"/>
																					</TextBlock.Effect>
																					<TextBlock.Style>
																						<Style TargetType="TextBlock">
																							<Setter Property="Text" Value="{Binding Game.Library}" />
																							<Style.Triggers>
																								<DataTrigger Binding="{Binding ElementName=GdStoreCheck, Path=IsChecked}" Value="True">
																									<Setter Property="Text" Value="{Binding Game.Platforms[0].Name}" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TextBlock.Style>
																			</TextBlock>  
																			<Grid Tag="{Binding ElementName=GdImageCheck, Path=IsChecked}"
																				Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}">
																				<Image RenderOptions.BitmapScalingMode="Fant" Stretch="Fill" StretchDirection="Both"
																					Source="{Binding ElementName=PlatformSpecIdBannerPath, Path=Text}">
																				</Image>
																				<Image RenderOptions.BitmapScalingMode="Fant" Stretch="Fill" StretchDirection="Both"
																					Source="{Binding ElementName=PlatformNameBannerPath, Path=Text}">
																				</Image>																
																				<Grid>
																					<Grid.Style>
																						<Style>
																							<Setter Property="Control.Visibility" Value="Collapsed"/>
																							<Style.Triggers>
																								<MultiDataTrigger>
																									<MultiDataTrigger.Conditions>
																										<Condition Binding="{Binding ElementName=UsePlayniteBanner, Path=IsChecked}" Value="True"/>
																										<Condition Binding="{Binding ElementName=GdStoreCheck, Path=IsChecked}" Value="False"/>
																										<Condition Binding="{Binding Game.Library}" Value="Playnite"/>
																									</MultiDataTrigger.Conditions>
																									<Setter Property="Control.Visibility" Value="Visible"/>
																								</MultiDataTrigger>
																							</Style.Triggers>
																						</Style>
																					</Grid.Style>
																					<Image RenderOptions.BitmapScalingMode="Fant" Stretch="Fill" StretchDirection="Both" 
																						Source="../Images/Banners/Playnite.png">
																					</Image>
																				</Grid>
																				<Image Tag="{DynamicResource GridUseItmStoreBanners}"
																					RenderOptions.BitmapScalingMode="Fant" Stretch="Fill" StretchDirection="Both" 
																					Source="{Binding ElementName=SourceNameBannerPath, Path=Text}"
																					Visibility="{Binding ElementName=GdStoreCheck, Path=IsChecked, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
																				</Image>
																			</Grid>
																			<Grid Visibility="{Binding ElementName=GdIconCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
																				<Image Margin="6,6,6,6" Height="Auto" 
																					HorizontalAlignment="Right" VerticalAlignment="Center"
																					Source="{Binding Game.Platforms[0].Icon, Converter={StaticResource ImageStringToImageConverter}}"
																					Visibility="{Binding ElementName=GdStoreCheck, Path=IsChecked, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
																				</Image>
																				<Image Margin="4,4,4,4" Height="Auto" 
																					HorizontalAlignment="Right" VerticalAlignment="Center"
																					Source="{Binding ElementName=SourceNameIconPath, Path=Text}" 
																					Visibility="{Binding ElementName=GdStoreCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
																				</Image>                                                
																			</Grid>
																		</Grid>
																	</Grid>
																	<StackPanel Orientation="Horizontal">                                    
																		<Grid Tag="{Binding ElementName=GdBannerCheck, Path=IsChecked}"
																			Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}">
																			<Grid Width="{Binding ElementName=eMixedGridBannerHeight, Path=Value}" Height="Auto" Tag="{Binding ElementName=GdBannerPosCheck, Path=IsChecked}"
																				Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
																				<Border Background="{DynamicResource ButtonBackgroundBrush}" Opacity=".9" />
																				<TextBlock FontSize="15" Margin="0,0,0,6"
																					HorizontalAlignment="Center" VerticalAlignment="{DynamicResource TextBannerVerticalAlignment}"
																					Foreground="{DynamicResource GlyphBrush}" >
																					<TextBlock.LayoutTransform>
																						<RotateTransform Angle="-90"/>
																					</TextBlock.LayoutTransform>
																					<TextBlock.Effect>
																						<DropShadowEffect ShadowDepth="3"/>
																					</TextBlock.Effect>
																					<TextBlock.Style>
																						<Style TargetType="TextBlock">
																							<Setter Property="Text" Value="{Binding Game.Library}" />
																							<Style.Triggers>
																								<DataTrigger Binding="{Binding ElementName=GdStoreCheck, Path=IsChecked}" Value="True">
																									<Setter Property="Text" Value="{Binding Game.Platforms[0].Name}" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TextBlock.Style>
																				</TextBlock>
																				<Grid Tag="{Binding ElementName=GdImageCheck, Path=IsChecked}"
																					Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}">
																					<Image RenderOptions.BitmapScalingMode="Fant" Stretch="Fill" StretchDirection="Both" Tag="{Binding ElementName=GdBannerCheck, Path=IsChecked}"
																						Source="{Binding ElementName=PlatformSpecIdBannerPath, Path=Text}"
																						Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}">
																						<Image.LayoutTransform>
																							<RotateTransform Angle="-90" />
																						</Image.LayoutTransform>
																					</Image>
																					<Image RenderOptions.BitmapScalingMode="Fant" Stretch="Fill" StretchDirection="Both" Tag="{Binding ElementName=GdBannerCheck, Path=IsChecked}"
																						Source="{Binding ElementName=PlatformNameBannerPath, Path=Text}"
																						Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}">
																						<Image.LayoutTransform>
																							<RotateTransform Angle="-90" />
																						</Image.LayoutTransform>
																					</Image>
																					<Grid>
																						<Grid.Style>
																							<Style>
																								<Setter Property="Control.Visibility" Value="Collapsed"/>
																								<Style.Triggers>
																									<MultiDataTrigger>
																										<MultiDataTrigger.Conditions>
																											<Condition Binding="{Binding ElementName=UsePlayniteBanner, Path=IsChecked}" Value="True"/>
																											<Condition Binding="{Binding ElementName=GdStoreCheck, Path=IsChecked}" Value="False"/>
																											<Condition Binding="{Binding Game.Library}" Value="Playnite"/>
																										</MultiDataTrigger.Conditions>
																										<Setter Property="Control.Visibility" Value="Visible"/>
																									</MultiDataTrigger>
																								</Style.Triggers>
																							</Style>
																						</Grid.Style>
																						<Image RenderOptions.BitmapScalingMode="Fant" Stretch="Fill" StretchDirection="Both" 
																							Source="../Images/Banners/Playnite.png">
																							<Image.LayoutTransform>
																								<RotateTransform Angle="-90" />
																							</Image.LayoutTransform>
																						</Image>
																					</Grid>
																					<Image Tag="{Binding ElementName=GdStoreCheck, Path=IsChecked}"
																						RenderOptions.BitmapScalingMode="Fant" Stretch="Fill" StretchDirection="Both" 
																						Source="{Binding ElementName=SourceNameBannerPath, Path=Text}"
																						Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
																						<Image.LayoutTransform>
																							<RotateTransform Angle="-90" />
																						</Image.LayoutTransform>
																					</Image>
																				</Grid>
																				<Grid Visibility="{Binding ElementName=GdIconCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
																					<Image Margin="6,6,6,6" Height="Auto" 
																						HorizontalAlignment="Center" VerticalAlignment="Top"
																						Source="{Binding Game.Platforms[0].Icon, Converter={StaticResource ImageStringToImageConverter}}"
																						Visibility="{Binding ElementName=GdStoreCheck, Path=IsChecked, Converter={StaticResource InvertedBooleanToVisibilityConverter}}">
																						<Image.LayoutTransform>
																							<RotateTransform Angle="-90" />
																						</Image.LayoutTransform>
																					</Image>
																					<Image Margin="4,4,4,4" Height="Auto" 
																						HorizontalAlignment="Center" VerticalAlignment="Top"
																						Source="{Binding ElementName=SourceNameIconPath, Path=Text}" 
																						Visibility="{Binding ElementName=GdStoreCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
																						<Image.LayoutTransform>
																							<RotateTransform Angle="-90" />
																						</Image.LayoutTransform>
																					</Image> 
																				</Grid>
																			</Grid>
																		</Grid>
																		<Grid Height="{Binding ElementName=eMixedGridCoverHeight, Path=Value}"
																			Tag="{PluginSettings Plugin=BackgroundChanger, Path=HasDataCover}">
																			<Grid.Style>
																				<Style TargetType="{x:Type Grid}">
																					<Setter Property="Visibility" Value="Visible" />
																					<Style.Triggers>
																						<DataTrigger Binding="{Binding ElementName=BackgroundChanger_PluginCoverImage, Path=Visibility}" Value="Visible">
																							<Setter Property="Visibility" Value="Collapsed" />
																						</DataTrigger>
																						<DataTrigger Binding="{PluginStatus Plugin=playnite-backgroundchanger-plugin, Status=Installed}" Value="False">
																							<Setter Property="Visibility" Value="Visible" />
																						</DataTrigger>
																					</Style.Triggers>
																				</Style>
																			</Grid.Style>
																			<Image x:Name="PART_ImageCover" 
																				RenderOptions.BitmapScalingMode="Fant" StretchDirection="Both"
																				HorizontalAlignment="Center" VerticalAlignment="Center"
																				Stretch="{Settings CoverArtStretch}" />
																		</Grid>
																		<ContentControl x:Name="BackgroundChanger_PluginCoverImage"
																			Height="{Binding ElementName=eMixedGridCoverHeight, Path=Value}"
																			HorizontalAlignment="Center" VerticalAlignment="Center" />
																	</StackPanel>
																</StackPanel>
															</Grid>
															<StackPanel Grid.Column="1" VerticalAlignment="Bottom" Margin="0,2,10,12">	
																<StackPanel Margin="4,0,0,6">
																	<StackPanel.Style>
																		<Style TargetType="StackPanel">
																			<Setter Property="Visibility" Value="Visible" />
																			<Style.Triggers>
																				<DataTrigger Binding="{Binding ElementName=GdLogoCheck, Path=IsChecked}" Value="False">
																					<Setter Property="Visibility" Value="Collapsed" />
																				</DataTrigger>
																			</Style.Triggers>
																		</Style>
																	</StackPanel.Style>
																	<ContentControl x:Name="ExtraMetadataLoader_LogoLoaderControl" />
																</StackPanel>
																
																<Grid HorizontalAlignment="{DynamicResource GridTitleHorizontalAlignment}"
																	Margin="4,0,0,0">
																	<Grid.Style>
																		<Style TargetType="Grid">
																			<Setter Property="Visibility" Value="Visible" />
																			<Style.Triggers>
																				<DataTrigger Binding="{Binding ElementName=GdTitleCheck, Path=IsChecked}" Value="False">
																					<Setter Property="Visibility" Value="Collapsed" />
																				</DataTrigger>
																			</Style.Triggers>
																		</Style>
																	</Grid.Style>
																	<Grid.ColumnDefinitions>
																		<ColumnDefinition Width="*"/>
																		<ColumnDefinition Width="Auto"/>
																	</Grid.ColumnDefinitions>
																	<TextBlock Text="{Binding Game.DisplayName}"
																			FontSize="{DynamicResource FontSizeLargest}"
																			TextWrapping="Wrap" FontFamily="Lato-Edited Edited-Uppercase"
																			Foreground="{DynamicResource TextBrush}" Grid.Column="0">
																		<TextBlock.Effect>
																			<DropShadowEffect ShadowDepth="4" RenderingBias="Quality" BlurRadius="2"/>
																		</TextBlock.Effect>
																	</TextBlock>
																	<ContentControl x:Name="NewsViewer_PlayersInGameViewerControl" ToolTip="{DynamicResource LOCGameViewNVPlayerCount}" Grid.Column="1" VerticalAlignment="Bottom">
																		<ContentControl.Resources>
																			<Style TargetType="Button" BasedOn="{StaticResource PlayersCountButtonStyle}" />
																		</ContentControl.Resources>
																	</ContentControl>
																</Grid>
																<WrapPanel HorizontalAlignment="Left" Margin="4,8,0,0">
																	<Grid Width="Auto" Height="Auto" Margin="0,0,10,5">
																		<Button Name="PART_ButtonPlayAction" 
																			FontFamily="Corbel" FontSize="24" Width="139" Height="40" Cursor="Hand" />
																		<Button Name="PART_ButtonContextAction"  ToolTip="{DynamicResource LOCInstallGame}" 
																			FontFamily="Corbel" FontSize="24" Width="139" Height="40" Cursor="Hand" />
																	</Grid>	
																	<Button ToolTip="{DynamicResource LOCMoreAction}" x:Name="PART_ButtonMoreActions"
																		Padding="0" Width="40" Height="40" Margin="0,0,10,5" Cursor="Hand" 
																		Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="24" >
																	</Button>
																	<Button x:Name="PART_ButtonEditGame" ToolTip="{DynamicResource LOCGameEditWindowTitle}"
																		Padding="0" Width="40" Height="40" Margin="0,0,10,5" Cursor="Hand" 
																		Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="24" >
																	</Button>																
																	<TextBlock Name="TtGameActivity" Visibility="Collapsed"
																		Tag="{PluginSettings Plugin=GameActivity, Path=LastDateTimeSession}" >
																		<TextBlock.Style>
																			<Style TargetType="TextBlock">
																				<Setter Property="Text">
																					<Setter.Value>
																						<MultiBinding StringFormat="{}{0}{1}">
																							<Binding Source="GameActivity &#x0a;"/>
																							<Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
																						</MultiBinding>
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</TextBlock.Style>
																	</TextBlock>
																	<Grid Width="Auto" Height="Auto" Margin="0,0,10,5">
																		<Grid.Style>
																			<Style TargetType="{x:Type Grid}" BasedOn="{StaticResource {x:Type Grid}}">
																				<Setter Property="Visibility" Value="Visible" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginStatus Plugin=playnite-gameactivity-plugin, Status=Installed}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=GameActivity, Path=EnableIntegrationButton}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=GameActivity, Path=HasData}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Grid.Style>
																		<ContentControl x:Name="GameActivity_PluginButton" FontSize="19"
																			Padding="0" Width="40" Height="40" Margin="0,0,0,0" Cursor="Hand"
																			ToolTip="{DynamicResource LOCGameActivityViewGameActivity}" />
																	</Grid>

																	<CheckBox Name="HLTBButtonVisibilityCheck" IsChecked="{DynamicResource HLTBButtonVisibility}" Visibility="Collapsed" />
																	<Grid Width="Auto" Height="Auto" Margin="0,0,10,5">
																		<Grid.Style>
																			<Style TargetType="{x:Type Grid}" BasedOn="{StaticResource {x:Type Grid}}">
																				<Setter Property="Visibility" Value="Collapsed" />
																				<Style.Triggers>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginStatus Plugin=playnite-howlongtobeat-plugin, Status=Installed}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=HowLongToBeat, Path=EnableIntegrationButton}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=HowLongToBeat, Path=HasData}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible" />
																					</MultiDataTrigger>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginStatus Plugin=playnite-howlongtobeat-plugin, Status=Installed}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=HowLongToBeat, Path=EnableIntegrationButton}" Value="True"/>
																							<Condition Binding="{Binding ElementName=HLTBButtonVisibilityCheck, Path=IsChecked}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible" />
																					</MultiDataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Grid.Style>
																		<ContentControl x:Name="HowLongToBeat_PluginButton" FontSize="19" 
																		Padding="0" Width="40" Height="40" Margin="0,0,0,0" Cursor="Hand"
																		ToolTip="{DynamicResource LOCHowLongToBeatPluginView}" />
																	</Grid>

																	<TextBlock Name="TtImageCount" Visibility="Collapsed"
																		Tag="{PluginSettings Plugin=ScreenshotsVisualizer, Path=ListScreenshots.Count}" >
																		<TextBlock.Style>
																			<Style TargetType="TextBlock">
																				<Setter Property="Text">
																					<Setter.Value>
																						<MultiBinding StringFormat="{}{0}{1}{2}">
																							<Binding Source="Screenshots Visualizer&#x0a;"/>
																							<Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
																							<Binding Source=" image(s)"/>
																						</MultiBinding>
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</TextBlock.Style>
																	</TextBlock>
																	<Grid Width="Auto" Height="Auto" Margin="0,0,10,5">
																		<Grid.Style>
																			<Style TargetType="{x:Type Grid}" BasedOn="{StaticResource {x:Type Grid}}">
																				<Setter Property="Visibility" Value="Visible" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginStatus Plugin=playnite-screenshotsvisualizer-plugin, Status=Installed}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationButton}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Grid.Style>
																		<ContentControl x:Name="ScreenshotsVisualizer_PluginButton" FontSize="19"
																		Padding="0" Width="40" Height="40" Margin="0,0,0,0" Cursor="Hand"
																		ToolTip="{DynamicResource LOCSsvViewScreenshots}" />
																	</Grid>

																	<TextBlock Name="TtAchievementsPorcent" Visibility="Collapsed"
																		Tag="{PluginSettings Plugin=SuccessStory, Path=Percent}" >
																		<TextBlock.Style>
																			<Style TargetType="TextBlock">
																				<Setter Property="Text">
																					<Setter.Value>
																						<MultiBinding StringFormat="{}{0}{1}{2}">
																							<Binding Source="Achievements "/>
																							<Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
																							<Binding Source="%"/>
																						</MultiBinding>
																					</Setter.Value>
																				</Setter>
																			</Style>
																		</TextBlock.Style>
																	</TextBlock>
																	<Grid Width="Auto" Height="Auto" Margin="0,0,10,5" >
																		<Grid.Style>
																			<Style TargetType="{x:Type Grid}" BasedOn="{StaticResource {x:Type Grid}}">
																				<Setter Property="Visibility" Value="Visible" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginStatus Plugin=playnite-successstory-plugin, Status=Installed}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationButton}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Grid.Style>
																		<ContentControl x:Name="SuccessStory_PluginButton" FontSize="19"
																		Padding="0" Width="40" Height="40" Margin="0,0,0,0" Cursor="Hand"
																		ToolTip="{DynamicResource LOCSuccessStoryViewGame}" />
																	</Grid>
																	<Grid Width="Auto" Height="Auto" Margin="0,0,10,5">
																		<Grid.Style>
																			<Style TargetType="{x:Type Grid}" BasedOn="{StaticResource {x:Type Grid}}">
																				<Setter Property="Visibility" Value="Visible" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginStatus Plugin=playnite-checklocalizations-plugin, Status=Installed}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=CheckLocalizations, Path=EnableIntegrationButton}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=CheckLocalizations, Path=HasData}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Grid.Style>
																		<ContentControl x:Name="CheckLocalizations_PluginButton" FontSize="19"
																		Padding="0" Width="40" Height="40" Margin="0,0,0,0" Cursor="Hand"
																		ToolTip="{DynamicResource LOCCheckLocalizationsGameMenuPluginView}" />
																	</Grid>
																	<Grid Width="Auto" Height="Auto" Margin="0,0,10,5">
																		<Grid.Style>
																			<Style TargetType="{x:Type Grid}" BasedOn="{StaticResource {x:Type Grid}}">
																				<Setter Property="Visibility" Value="Visible" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginStatus Plugin=playnite-systemchecker-plugin, Status=Installed}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=SystemChecker, Path=EnableIntegrationButton}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=SystemChecker, Path=HasData}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Grid.Style>
																		<ContentControl x:Name="SystemChecker_PluginButton" FontSize="19"
																		Padding="0" Width="40" Height="40" Margin="0,0,0,0" Cursor="Hand"
																		ToolTip="{DynamicResource LOCSystemCheckerCheckConfig}" />
																	</Grid>
																	<Grid Width="Auto" Height="Auto" Margin="0,0,10,5">
																		<Grid.Style>
																			<Style TargetType="{x:Type Grid}" BasedOn="{StaticResource {x:Type Grid}}">
																				<Setter Property="Visibility" Value="Visible" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginStatus Plugin=playnite-checkdlc-plugin, Status=Installed}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=CheckDlc, Path=EnableIntegrationButton}" Value="False">
																						<Setter Property="Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Grid.Style>
																		<ContentControl x:Name="CheckDlc_PluginButton" FontSize="19"
																		Padding="0" Width="40" Height="40" Margin="0,0,0,0" Cursor="Hand"
																		ToolTip="{DynamicResource LOCCheckDlcViewDlc}" />
																	</Grid>
																</WrapPanel>
																<WrapPanel HorizontalAlignment="Left" Margin="5,0,0,0">
																	<Grid Name="PART_ElemSource" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,16,0">
                                                                        <Grid.Style>
                                                                            <Style>
                                                                                <Setter Property="Control.Visibility" Value="Visible"/>
                                                                                <Style.Triggers>
                                                                                    <DataTrigger Binding="{Binding Game.SourceId}" Value="00000000-0000-0000-0000-000000000000">
                                                                                        <Setter Property="Control.Visibility" Value="Collapsed"/>
                                                                                    </DataTrigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </Grid.Style>
                                                                        <Grid.RowDefinitions>
																			<RowDefinition Height="*" />
																			<RowDefinition Height="*" />
																		</Grid.RowDefinitions>
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="*" /> 	<!-- 0 -->
																			<ColumnDefinition Width="*" /> 	<!-- 1 -->
																		</Grid.ColumnDefinitions>
																	
																		<Grid Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,5,0">
																			<Label Content="" 
																				FontFamily="{StaticResource FontIcoFont}" FontSize="28" 
																				VerticalAlignment="Bottom" HorizontalAlignment="Left" Foreground="{DynamicResource GlyphBrush}"/> 
																			<Label Margin="22,0,0,0" Content="" 
																				FontFamily="{StaticResource FontIcoFont}" FontSize="13" 
																				VerticalAlignment="Bottom" HorizontalAlignment="Left" Foreground="{DynamicResource TextBrush}"/> 
																		</Grid>
																		
																		<Label Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,4,0,-6"
																			Foreground="{DynamicResource TextBrushDark}" FontSize="18" FontFamily="Corbel" 
																			Typography.Capitals="AllSmallCaps" Content="{DynamicResource LOCSourceLabel}"/>
																		<Button Grid.Column="1" Grid.Row="1"  HorizontalAlignment="Center"  VerticalAlignment="Center" 
																			Name="PART_ButtonSource" Cursor="Hand" 
																			Style="{StaticResource SimpleButton}" Foreground="{DynamicResource TextBrush}" />
																	</Grid>
																	
																	<Grid Name="PART_ElemLastPlayed" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,16,0">
																		<Grid.RowDefinitions>
																			<RowDefinition Height="*" />
																			<RowDefinition Height="*" />
																		</Grid.RowDefinitions>
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="*" /> 		<!-- 0 -->
																			<ColumnDefinition Width="Auto" /> 	<!-- 1 -->
																		</Grid.ColumnDefinitions>

																		<Label Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,12,0"
																			Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="24" Foreground="{DynamicResource GlyphBrush}" />

																		<Label Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center"
																			Foreground="{DynamicResource TextBrushDark}" FontSize="18"
																			FontFamily="Corbel" Typography.Capitals="AllSmallCaps" Content="{DynamicResource LOCLastPlayed}"></Label>
																		<StackPanel Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" Orientation="Horizontal">
																			<Grid>
																				<Grid.RowDefinitions>
																					<RowDefinition Height="*" />
																				</Grid.RowDefinitions>
																				<Grid.ColumnDefinitions>
																					<ColumnDefinition Width="*" /> 		<!-- 0 -->
																					<ColumnDefinition Width="Auto" /> 	<!-- 1 -->
																				</Grid.ColumnDefinitions>
																				<Grid Grid.Column="0" Grid.Row="0">
																					<Grid.Style>
																						<Style>
																							<Setter Property="Control.Visibility" Value="Visible" />
																							<Style.Triggers>
																								<DataTrigger Binding="{Binding Game.LastActivitySegment}" Value="Never">
																									<Setter Property="Control.Visibility" Value="Collapsed" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</Grid.Style>
																					<TextBlock Name="PART_TextLastActivity" VerticalAlignment="Center" 
																						TextBlock.Foreground="{DynamicResource TextBrush}"  FontSize="13" />
																				</Grid>
																				<Grid Grid.Column="0" Grid.Row="0">
																					<Grid.Style>
																						<Style>
																							<Setter Property="Control.Visibility" Value="Collapsed" />
																							<Style.Triggers>
																								<MultiDataTrigger>
																									<MultiDataTrigger.Conditions>
																										<Condition Binding="{PluginStatus Plugin=playnite-gameactivity-plugin, Status=Installed}" Value="False" />
																										<Condition Binding="{Binding Game.LastActivitySegment}" Value="Never" />
																									</MultiDataTrigger.Conditions>
																									<Setter Property="Control.Visibility" Value="Visible"  />
																								</MultiDataTrigger>
																							</Style.Triggers>
																						</Style>
																					</Grid.Style>
																					<TextBlock Text="{DynamicResource LOCGameViewLastPlayedNotPlayed}" VerticalAlignment="Center" 
																						TextBlock.Foreground="{DynamicResource TextBrush}"  FontSize="13"/>
																				</Grid>
																				<TextBlock Grid.Column="1" Grid.Row="0"
																					Text="{PluginSettings Plugin=GameActivity, Path=LastPlaytimeSession}" 
																					VerticalAlignment="Center" TextBlock.Foreground="{DynamicResource TextBrush}"  FontSize="13">
																					<TextBlock.Style>
																						<Style>
																							<Setter Property="Control.Margin" Value="6,0,0,0"/>
																							<Setter Property="Control.Visibility" Value="Visible"/>
																							<Style.Triggers>
																								<DataTrigger Binding="{Binding Game.LastActivitySegment}" Value="Never">
																									<Setter Property="Control.Margin" Value="0,0,0,0"/>
																								</DataTrigger>
																								<DataTrigger Binding="{PluginStatus Plugin=playnite-gameactivity-plugin, Status=Installed}" Value="False">
																									<Setter Property="Control.Visibility" Value="Collapsed"/>
																								</DataTrigger>
																								<MultiDataTrigger>
																									<MultiDataTrigger.Conditions>
																										<Condition Binding="{PluginSettings Plugin=GameActivity, Path=HasData}" Value="False" />
																										<Condition Binding="{PluginSettings Plugin=GameActivity, Path=LastPlaytimeSession}" Value="Not Played" />
																									</MultiDataTrigger.Conditions>
																									<Setter Property="Control.Visibility" Value="Collapsed" />
																								</MultiDataTrigger>
																								<MultiDataTrigger>
																									<MultiDataTrigger.Conditions>
																										<Condition Binding="{PluginStatus Plugin=playnite-gameactivity-plugin, Status=Installed}" Value="True" />
																										<Condition Binding="{PluginSettings Plugin=GameActivity, Path=HasData}" Value="False" />
																										<Condition Binding="{Binding Game.LastActivitySegment}" Value="Never" />
																									</MultiDataTrigger.Conditions>
																									<Setter Property="Control.Visibility" Value="Visible" />
																								</MultiDataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TextBlock.Style>
																				</TextBlock>
																			</Grid>	
																		</StackPanel>
																	</Grid>

																	<Grid Name="PART_ElemPlayTime" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,16,0">
																		<Grid.RowDefinitions>
																			<RowDefinition Height="*" />
																			<RowDefinition Height="*" />
																		</Grid.RowDefinitions>
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="*" /> 		<!-- 0 -->
																			<ColumnDefinition Width="Auto" /> 	<!-- 1 -->
																		</Grid.ColumnDefinitions>

																		<Label Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,12,0"
																			Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="24" Foreground="{DynamicResource GlyphBrush}"/>
																		
																		<Label Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center"
																			Foreground="{DynamicResource TextBrushDark}" FontSize="18"
																			FontFamily="Corbel" Typography.Capitals="AllSmallCaps" Content="{DynamicResource LOCTimePlayed}" />
																		<TextBlock  Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center"
																			Name="PART_TextPlayTime" TextBlock.Foreground="{DynamicResource TextBrush}" FontSize="13"/>
																	</Grid>
																	
																	<Grid Name="PART_ElemCompletionStatus" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,16,0">
																		<Grid.RowDefinitions>
																			<RowDefinition Height="*" />
																			<RowDefinition Height="*" />
																		</Grid.RowDefinitions>
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="*" /> 		<!-- 0 -->
																			<ColumnDefinition Width="Auto" /> 	<!-- 1 -->
																		</Grid.ColumnDefinitions>

																		<Label Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,12,0"
																			Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="24" Foreground="{DynamicResource GlyphBrush}"/> 
																	
																		<Label Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center"
																			Foreground="{DynamicResource TextBrushDark}" FontSize="18" FontFamily="Corbel" Typography.Capitals="AllSmallCaps" Content="{DynamicResource LOCGameViewProgression}"/>
																		<Button Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="0"
																			Name="PART_ButtonCompletionStatus" Cursor="Hand" Foreground="{DynamicResource TextBrush}" Background="Transparent" Padding="0"/>
																	</Grid>
																	
																	<Grid VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,16,0">
																		<Grid.Style>
																			<Style>
																				<Setter Property="Control.Visibility" Value="Collapsed" />
																				<Style.Triggers>
																					<DataTrigger Binding="{Binding ElementName=GdPlayCountCheck, Path=IsChecked}" Value="True">
																						<Setter Property="Control.Visibility" Value="Visible" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Grid.Style>
																		<Grid.RowDefinitions>
																			<RowDefinition Height="*" />
																			<RowDefinition Height="*" />
																		</Grid.RowDefinitions>
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="*" /> 		<!-- 0 -->
																			<ColumnDefinition Width="Auto" /> 	<!-- 1 -->
																			<ColumnDefinition Width="Auto" /> 	<!-- 2 -->
																		</Grid.ColumnDefinitions>

																		<Label Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,9,0"
																			Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="27" Foreground="{DynamicResource GlyphBrush}"/>
																		
																		<Label Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center"
																			Foreground="{DynamicResource TextBrushDark}" FontSize="18"
																			FontFamily="Corbel" Typography.Capitals="AllSmallCaps" Content="{DynamicResource LOCPlayCountLabel}" />
																		<TextBlock  Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Right"
																			TextBlock.Foreground="{DynamicResource TextBrush}" FontSize="13">
																			<TextBlock.Style>
																				<Style>
																					<Setter Property="TextBlock.Text" Value="{Binding Game.PlayCount}"/>
																					<Style.Triggers>
																						<DataTrigger Binding="{Binding Game.PlayCount}" Value="0">
																							<Setter Property="TextBlock.Text" Value="{DynamicResource LOCGameViewPlayCountNotPlayed}"/>
																						</DataTrigger>
																					</Style.Triggers>
																				</Style>
																			</TextBlock.Style>																		
																		</TextBlock>
																		<TextBlock  Grid.Column="2" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="3,0,0,0"
																			TextBlock.Foreground="{DynamicResource TextBrush}" FontSize="13">
																			<TextBlock.Style>
																				<Style>
																					<Setter Property="Control.Visibility" Value="Visible"/>
																					<Setter Property="TextBlock.Text" Value="{DynamicResource LOCGameViewPlayCountTimes}"/>
																					<Style.Triggers>
																						<DataTrigger Binding="{Binding Game.PlayCount}" Value="0">
																							<Setter Property="Control.Visibility" Value="Collapsed"/>
																						</DataTrigger>
																						<DataTrigger Binding="{Binding Game.PlayCount}" Value="1">
																							<Setter Property="TextBlock.Text" Value="{DynamicResource LOCGameViewPlayCountTime}"/>
																						</DataTrigger>
																					</Style.Triggers>
																				</Style>
																			</TextBlock.Style>																		
																		</TextBlock>
																	</Grid>

																	<Grid VerticalAlignment="Center" HorizontalAlignment="Center">
																		<Grid.RowDefinitions>
																			<RowDefinition Height="*" />
																			<RowDefinition Height="*" />
																		</Grid.RowDefinitions>
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="*" /> 		<!-- 0 -->
																			<ColumnDefinition Width="Auto" /> 	<!-- 1 -->
																		</Grid.ColumnDefinitions>		
																		<Grid.Style>
																			<Style>
																				<Setter Property="Control.Visibility" Value="Visible" />
																				<Style.Triggers>
																					<DataTrigger Binding="{Binding ElementName=GdFeaturesCheck, Path=IsChecked}" Value="True">
																						<Setter Property="Control.Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=DataCount}" Value="0">
																						<Setter Property="Control.Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginStatus Plugin=playnite-librarymanagement-plugin, Status=Installed}" Value="False">
																						<Setter Property="Control.Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=EnableIntegrationFeatures}" Value="False">
																						<Setter Property="Control.Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Grid.Style>

																		<Label Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,12,0"
																			Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="27" Foreground="{DynamicResource GlyphBrush}"/>
																		
																		<Label Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,3,0,-3"
																			Foreground="{DynamicResource TextBrushDark}" FontSize="18" FontFamily="Corbel" 
																			Typography.Capitals="AllSmallCaps" Content="{DynamicResource LOCFeaturesLabel}" />
																		<Grid Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center">
																			<ItemsControl ItemsSource="{PluginSettings Plugin=LibraryManagement, Path=DataList}">
																				<ItemsControl.ItemsPanel>
																					<ItemsPanelTemplate>
																						<StackPanel Orientation="Horizontal"/>
																					</ItemsPanelTemplate>
																				</ItemsControl.ItemsPanel>
																				<ItemsControl.ItemTemplate>
																					<DataTemplate>
																						<StackPanel Width="Auto" Orientation="Horizontal">
																							<Image Width="20" Height="24" Source="{Binding IconBitmapImage}" Stretch="Uniform"  Margin="0,0,0,0">															
																								<Image.Style>
																									<Style>
																										<Setter Property="Control.ToolTip" Value="{Binding NameAssociated}" />
																										<Style.Triggers>
																											<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=DataCount}" Value="1">
																												<Setter Property="Control.ToolTip" Value="{x:Null}" />
																											</DataTrigger>
																											<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=DataCount}" Value="2">
																												<Setter Property="Control.ToolTip" Value="{x:Null}" />
																											</DataTrigger>
																										</Style.Triggers>
																									</Style>
																								</Image.Style>
																							</Image>
																							<Label Width="Auto" Foreground="{DynamicResource TextBrush}"
																									FontSize="11" Content="{Binding NameAssociated}" >
																								<Label.Style>
																									<Style>
																										<Setter Property="Control.Visibility" Value="Collapsed" />
																										<Style.Triggers>
																											<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=DataCount}" Value="1">
																												<Setter Property="Control.Visibility" Value="Visible" />
																											</DataTrigger>
																											<DataTrigger Binding="{PluginSettings Plugin=LibraryManagement, Path=DataCount}" Value="2">
																												<Setter Property="Control.Visibility" Value="Visible" />
																											</DataTrigger>
																										</Style.Triggers>
																									</Style>
																								</Label.Style>
																							</Label> 
																						</StackPanel>
																					</DataTemplate>
																				</ItemsControl.ItemTemplate>
																			</ItemsControl>
																		</Grid>
																	</Grid>
																</WrapPanel>
																<CheckBox Name="GridHideHltbOnExpanderCheck" IsChecked="{DynamicResource GridHideHltbOnExpander}" Visibility="Collapsed" />													
																<Grid Margin="5,5,0,0">
																	<Grid.Style>
																		<Style>
																			<Setter Property="Control.Visibility" Value="Visible" />
																			<Style.Triggers>
																				<DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=EnableIntegrationProgressBar}" Value="False">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=HasData}" Value="False">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<DataTrigger Binding="{PluginStatus Plugin=playnite-howlongtobeat-plugin, Status=Installed}" Value="False">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<MultiDataTrigger>
																					<MultiDataTrigger.Conditions>
																						<Condition Binding="{Binding ElementName=eMnDvPanelsExpander, Path=IsExpanded}" Value="True" />
																						<Condition Binding="{Binding ElementName=GridHideHltbOnExpanderCheck, Path=IsChecked}" Value="True" />
																					</MultiDataTrigger.Conditions>
																					<Setter Property="Control.Visibility" Value="Collapsed"  />
																				</MultiDataTrigger>
																			</Style.Triggers>
																		</Style>
																	</Grid.Style>
																
																	<Label Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="29" 
																		VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{DynamicResource TextBrush}"
																		Visibility="{Binding ElementName=GdHLTBCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
																	<StackPanel>
																		<StackPanel.Style>
																			<Style>
																				<Setter Property="Control.Margin" Value="34,0,0,0" />
																				<Style.Triggers>
																					<DataTrigger Binding="{Binding ElementName=GdHLTBCheck, Path=IsChecked}" Value="False">
																						<Setter Property="Control.Margin" Value="0,0,0,0" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</StackPanel.Style>
																		<WrapPanel Margin="0,0,0,0" 
																			Visibility="{Binding ElementName=GdHLTBCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}">
																			<TextBlock Text="{DynamicResource LOCGameViewHLTBLabelTitle}" Margin="3,0,0,0"  VerticalAlignment="Center" 
																				Typography.Capitals="AllSmallCaps" Style="{DynamicResource BaseTextBlockStyle}"
																				FontSize="{DynamicResource FontSizeLarge}"/>
																			
																			<StackPanel Orientation="Horizontal" Tag="{PluginSettings Plugin=HowLongToBeat, Path=MainStory}">
																				<StackPanel.Style>
																					<Style>
																						<Setter Property="Control.Visibility" Value="Visible" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="0">
																								<Setter Property="Control.Visibility" Value="Collapsed" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</StackPanel.Style>

																				<Label Content="{DynamicResource LOCGameViewHLTBMainStoryLabel}" Foreground="{DynamicResource TextBrushDark}"  
																					Margin="8,-1,0,0" FontFamily="Corbel"  FontSize="12"/>
																				<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=MainStoryFormat}"   
																					Foreground="{PluginSettings Plugin=HowLongToBeat, Path=ColorFirst}"  FontFamily="Corbel"  FontSize="12" />
																			</StackPanel>
																			
																			<StackPanel Orientation="Horizontal" Tag="{PluginSettings Plugin=HowLongToBeat, Path=MainExtra}">
																				<StackPanel.Style>
																					<Style>
																						<Setter Property="Control.Visibility" Value="Visible" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="0">
																								<Setter Property="Control.Visibility" Value="Collapsed" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</StackPanel.Style>

																				<Label Content="{DynamicResource LOCGameViewHLTBExtraLabel}" Foreground="{DynamicResource TextBrushDark}"  
																					Margin="8,-1,0,0" FontFamily="Corbel"  FontSize="12"/>
																				<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=MainExtraFormat}"   
																					Foreground="{PluginSettings Plugin=HowLongToBeat, Path=ColorSecond}"  FontFamily="Corbel"  FontSize="12" />
																			</StackPanel>
																			
																			<StackPanel Orientation="Horizontal" Tag="{PluginSettings Plugin=HowLongToBeat, Path=Completionist}">
																				<StackPanel.Style>
																					<Style>
																						<Setter Property="Control.Visibility" Value="Visible" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="0">
																								<Setter Property="Control.Visibility" Value="Collapsed" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</StackPanel.Style>

																				<Label Content="{DynamicResource LOCGameViewHLTBCompletionistLabel}" Foreground="{DynamicResource TextBrushDark}"  
																					Margin="8,-1,0,0" FontFamily="Corbel"  FontSize="12"/>
																				<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=CompletionistFormat}"   
																					Foreground="{PluginSettings Plugin=HowLongToBeat, Path=ColorThird}"  FontFamily="Corbel"  FontSize="12" />
																			</StackPanel>
																			
																			<StackPanel Orientation="Horizontal" Tag="{PluginSettings Plugin=HowLongToBeat, Path=Solo}">
																				<StackPanel.Style>
																					<Style>
																						<Setter Property="Control.Visibility" Value="Visible" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="0">
																								<Setter Property="Control.Visibility" Value="Collapsed" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</StackPanel.Style>

																				<Label Content="{DynamicResource LOCGameViewHLTBSoloLabel}" Foreground="{DynamicResource TextBrushDark}"  
																					Margin="8,-1,0,0" FontFamily="Corbel"  FontSize="12"/>
																				<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=SoloFormat}"   FontFamily="Corbel"  FontSize="12" />
																			</StackPanel>
																			
																			<StackPanel Orientation="Horizontal" Tag="{PluginSettings Plugin=HowLongToBeat, Path=CoOp}">
																				<StackPanel.Style>
																					<Style>
																						<Setter Property="Control.Visibility" Value="Visible" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="0">
																								<Setter Property="Control.Visibility" Value="Collapsed" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</StackPanel.Style>

																				<Label Content="{DynamicResource LOCGameViewHLTBCoOpLabel}" Foreground="{DynamicResource TextBrushDark}"  
																					Margin="8,-1,0,0" FontFamily="Corbel"  FontSize="12"/>
																				<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=CoOpFormat}"   FontFamily="Corbel"  FontSize="12" />
																			</StackPanel>
																			
																			<StackPanel Orientation="Horizontal" Tag="{PluginSettings Plugin=HowLongToBeat, Path=Vs}">
																				<StackPanel.Style>
																					<Style>
																						<Setter Property="Control.Visibility" Value="Visible" />
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Tag}" Value="0">
																								<Setter Property="Control.Visibility" Value="Collapsed" />
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</StackPanel.Style>

																				<Label Content="{DynamicResource LOCGameViewHLTBVSLabel}" Foreground="{DynamicResource TextBrushDark}"  
																					Margin="8,-1,0,0" FontFamily="Corbel"  FontSize="12"/>
																				<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=VsFormat}"   FontFamily="Corbel"  FontSize="12" />
																			</StackPanel>
																		</WrapPanel>
																		<StackPanel>
																			<StackPanel.Style>
																				<Style TargetType="{x:Type StackPanel}">
																					<Setter Property="Visibility" Value="Visible" />
																					<Style.Triggers>
																						<DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=HasData}" Value="False">
																							<Setter Property="Visibility" Value="Collapsed" />
																						</DataTrigger>
																						<DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=EnableIntegrationProgressBar}" Value="False">
																							<Setter Property="Visibility" Value="Collapsed" />
																						</DataTrigger>
																					</Style.Triggers>
																				</Style>
																			</StackPanel.Style>
																			<ContentControl x:Name="HowLongToBeat_PluginProgressBar" Margin="0,0,0,0" MinHeight="18" MaxHeight="18"
																				Width="{Binding ElementName=PART_HltbProgressBar, Path=ActualWidth}" />
																		</StackPanel>
																	</StackPanel>
																</Grid>
																<CheckBox Name="GridHideSuccessOnExpanderCheck" IsChecked="{DynamicResource GridHideSuccessOnExpander}" Visibility="Collapsed" />
																<Grid  Margin="5,7,0,2">
																	<Grid.Style>
																		<Style>
																			<Setter Property="Control.Visibility" Value="Visible" />
																			<Style.Triggers>
																				<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="False">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<DataTrigger Binding="{Binding ElementName=GdSuccesCompactCheck, Path=IsChecked}" Value="True">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<DataTrigger Binding="{PluginStatus Plugin=playnite-successstory-plugin, Status=Installed}" Value="False">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<MultiDataTrigger>
																					<MultiDataTrigger.Conditions>
																						<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationCompactLocked}" Value="False"/>
																						<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationCompactUnlocked}" Value="False"/>
																					</MultiDataTrigger.Conditions>
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</MultiDataTrigger>
																				<MultiDataTrigger>
																					<MultiDataTrigger.Conditions>
																						<Condition Binding="{Binding ElementName=eMnDvPanelsExpander, Path=IsExpanded}" Value="True" />
																						<Condition Binding="{Binding ElementName=GridHideSuccessOnExpanderCheck, Path=IsChecked}" Value="True" />
																					</MultiDataTrigger.Conditions>
																					<Setter Property="Control.Visibility" Value="Collapsed"  />
																				</MultiDataTrigger>		
																			</Style.Triggers>
																		</Style>
																	</Grid.Style>
																	
																	<Grid.ColumnDefinitions>
																		<ColumnDefinition Width="Auto"/>
																		<ColumnDefinition Width="*"/>
																		<ColumnDefinition Width="Auto" />
																		<ColumnDefinition Width="*"/>
																	</Grid.ColumnDefinitions>
																	<Label Grid.Column="0" Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="21" Margin="0,0,6,0"
																		VerticalAlignment="Center" HorizontalAlignment="Center" 
																		ToolTip="{DynamicResource LOCGameViewSSUnlockedIconLabel}" Foreground="{StaticResource PositiveRatingBrush}"
																		Tag="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationCompactUnlocked}" >
																		<Label.Style>
																			<Style>
																				<Setter Property="Control.Visibility" Value="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=Unlocked}" Value="0">
																						<Setter Property="Control.Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Label.Style>
																	</Label>
																	<ContentControl Grid.Column="1" x:Name="SuccessStory_PluginCompactUnlocked" Margin="0,5,6,0" MinHeight="64" MaxHeight="64" >
																		<ContentControl.Style>
																			<Style>
																				<Setter Property="Control.Visibility" Value="Visible" />
																				<Setter Property="Grid.ColumnSpan" Value="1" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=Unlocked}" Value="0">
																						<Setter Property="Control.Visibility" Value="Collapsed" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=Is100Percent}" Value="True">
																						<Setter Property="Grid.ColumnSpan" Value="3" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</ContentControl.Style>
																	</ContentControl>
																	<Label Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="21" Margin="0,0,6,0"
																		VerticalAlignment="Center" HorizontalAlignment="Center" 
																		ToolTip="{DynamicResource LOCGameViewSSLockedIconLabel}" Foreground="{DynamicResource TextBrushDark}"
																		Tag="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationCompactLocked}" >
																		<Label.Style>
																			<Style>
																				<Setter Property="Grid.Column" Value="2" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=Unlocked}" Value="0">
																						<Setter Property="Grid.Column" Value="0" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=Is100Percent}" Value="True">
																						<Setter Property="Control.Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</Label.Style>
																	</Label>
																	<ContentControl x:Name="SuccessStory_PluginCompactLocked" Margin="0,5,0,0" MinHeight="64" MaxHeight="64" >
																		<ContentControl.Style>
																			<Style>
																				<Setter Property="Grid.Column" Value="3" />
																				<Setter Property="Grid.ColumnSpan" Value="1" />
																				<Style.Triggers>
																					<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=Unlocked}" Value="0">
																						<Setter Property="Grid.Column" Value="1" />
																						<Setter Property="Grid.ColumnSpan" Value="3" />
																					</DataTrigger>
																					<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=Is100Percent}" Value="True">
																						<Setter Property="Control.Visibility" Value="Collapsed" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</ContentControl.Style>
																	</ContentControl>
																</Grid>
															
																<Grid  Margin="5,5,0,0">
																	<Grid.Style>
																		<Style>
																			<Setter Property="Control.Visibility" Value="Visible" />
																			<Style.Triggers>
																				<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="False">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<DataTrigger Binding="{Binding ElementName=GdSuccesCompactCheck, Path=IsChecked}" Value="False">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<DataTrigger Binding="{PluginStatus Plugin=playnite-successstory-plugin, Status=Installed}" Value="False">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationCompact}" Value="False">
																					<Setter Property="Control.Visibility" Value="Collapsed" />
																				</DataTrigger>
																				<MultiDataTrigger>
																					<MultiDataTrigger.Conditions>
																						<Condition Binding="{Binding ElementName=eMnDvPanelsExpander, Path=IsExpanded}" Value="True" />
																						<Condition Binding="{Binding ElementName=GridHideSuccessOnExpanderCheck, Path=IsChecked}" Value="True" />
																					</MultiDataTrigger.Conditions>
																					<Setter Property="Control.Visibility" Value="Collapsed"  />
																				</MultiDataTrigger>		
																			</Style.Triggers>
																		</Style>
																	</Grid.Style>
																	
																	<Grid.ColumnDefinitions>
																		<ColumnDefinition Width="Auto"/>
																		<ColumnDefinition Width="*" />
																	</Grid.ColumnDefinitions>
																		
																	<Grid Grid.Column="0" ToolTip="{DynamicResource LOCGameViewSSCompactIconLabel}" Margin="-8,-3,0,0">															
																		<Label Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="27" Margin="0,0,0,0"
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock Tag="{PluginSettings Plugin=SuccessStory, Path=Percent}" 
																			Foreground="{DynamicResource PositiveRatingBrush}"
																			FontSize="11" Margin="25,45,0,0">
																			<TextBlock.Style>
																				<Style TargetType="TextBlock">
																					<Setter Property="Text">
																						<Setter.Value>
																							<MultiBinding StringFormat="{}{0}{1}">
																								<Binding RelativeSource="{RelativeSource Self}" Path="Tag" />
																								<Binding Source="% " />
																							</MultiBinding>
																						</Setter.Value>
																					</Setter>
																				</Style>
																			</TextBlock.Style>
																		</TextBlock>
																	</Grid>
																	<ContentControl Grid.Column="1" x:Name="SuccessStory_PluginCompactList" Margin="0,5,0,0" MinHeight="70" MaxHeight="70" />													
																</Grid>
															</StackPanel>	
														</Grid>
														<Grid Name="PART_ElemLinks" Width="{Binding ElementName=Container,Path=ActualWidth}" Margin="4,8,6,2">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="Auto"/>
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>
															<Border Grid.Column="0" Grid.ColumnSpan="2" Background="{DynamicResource WindowBackgourndBrush}" Opacity="{DynamicResource DetailPanelOpacity}" 
																CornerRadius="{DynamicResource ControlCornerRadius}" />
															<Label Grid.Column="0" Margin="12,3,8,0" Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="25"
																VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource TextBrush}"/>
															<WrapPanel Grid.Column="1">
																<ItemsControl Name="PART_ItemsLinks"  Margin="2,8,0,8" VerticalAlignment="Center">
																	<ItemsControl.ItemsPanel>
																		<ItemsPanelTemplate>
																			<WrapPanel />
																		</ItemsPanelTemplate>
																	</ItemsControl.ItemsPanel>
																	<ItemsControl.ItemContainerStyle>
																		<Style TargetType="ContentPresenter">
																			<Setter Property="FrameworkElement.Margin" Value="10,0,15,0"/>
																		</Style>
																	</ItemsControl.ItemContainerStyle>
																</ItemsControl>
															</WrapPanel>              
														</Grid>
													</StackPanel>
												</Grid>
											</DockPanel>									
											<DockPanel MaxWidth="1600" Margin="16,8,16,4" Grid.Row="1">
												<StackPanel>
													<StackPanel.Resources>
														<Style x:Key="MyExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
															<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
															<Setter Property="SnapsToDevicePixels" Value="True" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type ToggleButton}">
																		<Border Padding="{TemplateBinding Padding}">
																			<Grid Margin="16,8,0,8">
																				<Grid.ColumnDefinitions>
																					<ColumnDefinition Width="*" />
																					<ColumnDefinition Width="Auto" />
																				</Grid.ColumnDefinitions>
																				<TextBlock Text=" " x:Name="UpArrow" 
																						VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{DynamicResource LOCGameViewOpenExpanderHover}"
																						Style="{DynamicResource BaseTextBlockStyle}" FontFamily="{StaticResource FontIcoFont}" 
																						Foreground="{DynamicResource TextBrushDark}" FontSize="18" MinWidth="20" 
																						FontWeight="Bold" Margin="2,0,2,0" Cursor="Hand"
																						Grid.Column="1" TextAlignment="Center" />
																				<TextBlock Text=" " x:Name="DownArrow" 
																						VerticalAlignment="Center" HorizontalAlignment="Left" ToolTip="{DynamicResource LOCGameViewCloseExpanderHover}"
																						Style="{DynamicResource BaseTextBlockStyle}" FontFamily="{StaticResource FontIcoFont}" 
																						Foreground="{DynamicResource TextBrushDark}" FontSize="18" MinWidth="20" 
																						FontWeight="Bold" Margin="2,0,2,0" Cursor="Hand"
																						Visibility="Collapsed"
																						Grid.Column="1" TextAlignment="Center"/>
																				<ContentPresenter Grid.Column="0" VerticalAlignment="Center"
																								SnapsToDevicePixels="True" HorizontalAlignment="Stretch" RecognizesAccessKey="True"  />
																			</Grid>
																		</Border>
																		<ControlTemplate.Triggers>
																			<Trigger Property="IsChecked" Value="True">
																				<Setter Property="Visibility" TargetName="DownArrow" Value="Visible" />
																				<Setter Property="Visibility" TargetName="UpArrow" Value="Collapsed" />
																			</Trigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>

														<Style TargetType="{x:Type Expander}">
															<Setter Property="BorderThickness" Value="0" />
															<Setter Property="BorderBrush" Value="Transparent" />
															<Setter Property="HorizontalContentAlignment" Value="Stretch" />
															<Setter Property="VerticalContentAlignment" Value="Stretch" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type Expander}">
																		<Grid>
																			<Border Background="{DynamicResource WindowBackgourndBrush}" 
																				Opacity="{DynamicResource DetailPanelOpacity}" 
																				CornerRadius="{DynamicResource ControlCornerRadius}" />
																			<DockPanel>
																				<ToggleButton BorderBrush="{TemplateBinding BorderBrush}" 
																					BorderThickness="{TemplateBinding BorderThickness}"
																					Style="{DynamicResource MyExpanderDownHeaderStyle}"
																					Padding="{TemplateBinding Padding}"
																					MinHeight="25" DockPanel.Dock="Top"
																					Background="{TemplateBinding Background}"
																					Content="{TemplateBinding Header}" Cursor="Hand"
																					IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
																				<Border x:Name="Border" DockPanel.Dock="Top" Visibility="Collapsed">
																					<ContentPresenter Focusable="False"
																									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
																									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
																				</Border>
																			</DockPanel>
																		</Grid>
																		<ControlTemplate.Triggers>
																			<Trigger Property="IsExpanded" Value="true">
																				<Setter Property="Visibility" TargetName="Border" Value="Visible" />
																			</Trigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</StackPanel.Resources>

													<StackPanel>												
														<StackPanel.Style>
															<Style TargetType="StackPanel">
																<Setter Property="Visibility" Value="Visible" />
																<Style.Triggers>
																	<DataTrigger Binding="{Binding ElementName=GdExpandersCheck, Path=IsChecked}" Value="True">
																		<Setter Property="Visibility" Value="Collapsed" />
																	</DataTrigger>
																</Style.Triggers>
															</Style>
														</StackPanel.Style>

														<Expander Name="eMnDvPanelsExpander" IsExpanded="{DynamicResource GridExpanderInitialyOpen}"  Margin="5,0,6,4">
															<Expander.Style>
																<Style TargetType="{x:Type Expander}"  BasedOn="{StaticResource {x:Type Expander}}">
																	<Setter Property="Visibility" Value="Collapsed" />
																	<Style.Triggers>
																		<DataTrigger Binding="{Binding ElementName=SuccessStoryHeader, Path=Visibility}" Value="Visible">
																			<Setter Property="Visibility" Value="Visible" />
																		</DataTrigger>
																		<DataTrigger Binding="{Binding ElementName=GameActivityHeader, Path=Visibility}" Value="Visible">
																			<Setter Property="Visibility" Value="Visible" />
																		</DataTrigger>
																		<DataTrigger Binding="{Binding ElementName=ScreenshotsVisualizerHeader, Path=Visibility}" Value="Visible">
																			<Setter Property="Visibility" Value="Visible" />
																		</DataTrigger>
																		<DataTrigger Binding="{Binding ElementName=SteamScreenshotsHeader, Path=Visibility}" Value="Visible">
																			<Setter Property="Visibility" Value="Visible" />
																		</DataTrigger>
																		<DataTrigger Binding="{Binding ElementName=HowLongToBeatHeader, Path=Visibility}" Value="Visible">
																			<Setter Property="Visibility" Value="Visible" />
																		</DataTrigger>
																		<DataTrigger Binding="{Binding ElementName=ReviewViewerHeader, Path=Visibility}" Value="Visible">
																			<Setter Property="Visibility" Value="Visible" />
																		</DataTrigger>
																		<DataTrigger Binding="{Binding ElementName=NewsViewerHeader, Path=Visibility}" Value="Visible">
																			<Setter Property="Visibility" Value="Visible" />
																		</DataTrigger>
																	</Style.Triggers>
																</Style>
															</Expander.Style>													
															<Expander.Header>
																<WrapPanel Orientation="Horizontal">
																	<StackPanel Orientation="Horizontal" Margin="0,0,12,0" Name="SuccessStoryHeader">
																		<StackPanel.Style>
																			<Style>
																				<Setter Property="Control.Visibility" Value="Collapsed"/>
																				<Style.Triggers>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationList}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationUserStats}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationChart}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																				</Style.Triggers>
																			</Style>
																		</StackPanel.Style>
																		<Label Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="{DynamicResource FontSizeLarger}" 
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock VerticalAlignment="Center" Text="{DynamicResource LOCSuccessStoryAchievements}" Typography.Capitals="SmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLarge}" Margin="4,0,4,0"/>	
																		
																		<Label Content="{PluginSettings Plugin=SuccessStory, Path=Unlocked}" Foreground="{DynamicResource PositiveRatingBrush}"
																			Typography.Capitals="AllSmallCaps" FontSize="{DynamicResource FontSizeLarge}" VerticalAlignment="Center"/>
																		<Label Content=" / " Foreground="{DynamicResource TextBrushDark}" VerticalAlignment="Center"
																			Typography.Capitals="AllSmallCaps" FontSize="{DynamicResource FontSize}"/>
																		<Label Content="{PluginSettings Plugin=SuccessStory, Path=Total}" Foreground="{DynamicResource TextBrushDark}"
																			Typography.Capitals="AllSmallCaps" FontSize="{DynamicResource FontSize}"  VerticalAlignment="Center"/>
																	</StackPanel>
																	<StackPanel Orientation="Horizontal" Margin="0,0,12,0" Name="GameActivityHeader">
																		<StackPanel.Style>
																			<Style>
																				<Setter Property="Control.Visibility" Value="Collapsed"/>
																				<Style.Triggers>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginSettings Plugin=GameActivity, Path=EnableIntegrationChartTime}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=GameActivity, Path=HasData}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginSettings Plugin=GameActivity, Path=EnableIntegrationChartLog}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=GameActivity, Path=HasDataLog}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																				</Style.Triggers>
																			</Style>
																		</StackPanel.Style>
																		<Label Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="{DynamicResource FontSizeLarger}" 
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock VerticalAlignment="Center" Text="{DynamicResource LOCGameActivitiesTitle}" Typography.Capitals="SmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLarge}" Margin="4,0,4,0"/>	
																		
																		<Label Content="{PluginSettings Plugin=GameActivity, Path=LastDateTimeSession}" 
																			Foreground="{DynamicResource TextBrushDark}" 
																			Typography.Capitals="AllSmallCaps" FontSize="{DynamicResource FontSize}"/>
																	</StackPanel>
																	<StackPanel Orientation="Horizontal" Margin="0,0,12,0" Name="ScreenshotsVisualizerHeader">
																		<StackPanel.Style>
																			<Style>
																				<Setter Property="Control.Visibility" Value="Collapsed"/>
																				<Style.Triggers>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowSinglePicture}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowPictures}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowPicturesVertical}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																				</Style.Triggers>
																			</Style>
																		</StackPanel.Style>
																		<Label Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="{DynamicResource FontSizeLarger}" 
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock VerticalAlignment="Center" Text="{DynamicResource LOCSsvTitle}" Typography.Capitals="SmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLarge}" Margin="4,0,4,0"/>	
																		
																		<Label Content="{PluginSettings Plugin=ScreenshotsVisualizer, Path=ListScreenshots.Count}" 
																			Foreground="{DynamicResource TextBrushDark}" 
																			Typography.Capitals="AllSmallCaps" FontSize="{DynamicResource FontSize}"/>
																	</StackPanel>
																	<StackPanel Orientation="Horizontal" Margin="0,0,12,0" Name="SteamScreenshotsHeader">
																		<StackPanel.Style>
																			<Style>
																				<Setter Property="Control.Visibility" Value="Collapsed"/>
																				<Style.Triggers>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginStatus Plugin=SteamScreenshots_8e77fe31-5e62-41e2-8fa2-64844cfd5b6b, Status=Installed}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=SteamScreenshots, Path=IsControlVisible, FallbackValue=False}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																				</Style.Triggers>
																			</Style>
																		</StackPanel.Style>
																		<Label Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="{DynamicResource FontSizeLarger}" 
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock VerticalAlignment="Center" Text="{DynamicResource LOCStoreScreenShotsTitle}" Typography.Capitals="SmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLarge}" Margin="4,0,4,0"/>
																	</StackPanel>
																	<StackPanel Orientation="Horizontal" Margin="0,0,12,0" Name="HowLongToBeatHeader">
																		<StackPanel.Style>
																			<Style>
																				<Setter Property="Control.Visibility" Value="Collapsed"/>
																				<Style.Triggers>
																					<MultiDataTrigger>
																						<MultiDataTrigger.Conditions>
																							<Condition Binding="{PluginSettings Plugin=HowLongToBeat, Path=EnableIntegrationViewItem}" Value="True"/>
																							<Condition Binding="{PluginSettings Plugin=HowLongToBeat, Path=HasData}" Value="True"/>
																						</MultiDataTrigger.Conditions>
																						<Setter Property="Control.Visibility" Value="Visible"/>
																					</MultiDataTrigger>
																				</Style.Triggers>
																			</Style>
																		</StackPanel.Style>
																		<Label Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="{DynamicResource FontSizeLarger}" 
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock VerticalAlignment="Center" Text=" Hltb " Typography.Capitals="SmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLarge}"/>
																	</StackPanel>
																	<StackPanel Orientation="Horizontal" Margin="0,0,12,0" Name="ReviewViewerHeader">
																		<Label Margin="0,0,4,0" Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="{DynamicResource FontSizeLarger}" 
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock VerticalAlignment="Center" Text="{DynamicResource LOCReview_Viewer_ReviewsLabel}" Typography.Capitals="SmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLarge}"/>
																			<StackPanel.Style>
																				<Style TargetType="StackPanel">
																					<Setter Property="Control.Visibility" Value="Collapsed"/>
																					<Style.Triggers>
																						<DataTrigger Binding="{PluginSettings Plugin=ReviewViewer, Path=IsControlVisible, FallbackValue=False}" Value="True">
																							<Setter Property="Visibility" Value="Visible" />
																						</DataTrigger>
																					</Style.Triggers>
																				</Style>
																			</StackPanel.Style>
																	</StackPanel>
																	<StackPanel Orientation="Horizontal" Name="NewsViewerHeader" Tag="{PluginSettings Plugin=NewsViewer, Path=ReviewsAvailable}"
																		Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Tag, Converter={StaticResource BooleanToVisibilityConverter}}" >
																		<Label Margin="0,0,4,0" Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="{DynamicResource FontSizeLarge}" 
																			VerticalAlignment="Center" HorizontalAlignment="Left" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock VerticalAlignment="Center" Text="{DynamicResource LOC_NewsViewer_NewsViewerControl_NewsLabel}" Typography.Capitals="SmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLarge}"/>
																	</StackPanel>
																</WrapPanel>
															</Expander.Header>
															<Expander.Content>												
																<StackPanel>
																	<Separator Background="{DynamicResource PanelSeparatorBrush}" Margin="8,3,8,3"
																		Visibility="{Binding ElementName=GdSeparatorCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
																	<Grid Margin="12,0,12,8">
																		<StackPanel>
																			<TabControl Name="ExpanderTabControl">
																				<TabControl.Style>
																					<Style TargetType="{x:Type TabControl}" BasedOn="{StaticResource {x:Type TabControl}}">
																						<Style.Triggers>
																							<DataTrigger Binding="{PluginSettings Plugin=NewsViewer, Path=ReviewsAvailable, FallbackValue=False}" Value="True">
																								<Setter Property="SelectedIndex" Value="9"/>
																							</DataTrigger>
																							<DataTrigger Binding="{PluginSettings Plugin=ReviewViewer, Path=IsControlVisible, FallbackValue=False}" Value="True">
																								<Setter Property="SelectedIndex" Value="8"/>
																							</DataTrigger>
																							<DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=HasData}" Value="True">
																								<Setter Property="SelectedIndex" Value="7"/>
																							</DataTrigger>
																							<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData}" Value="True">
																								<Setter Property="SelectedIndex" Value="5"/>
																							</DataTrigger>
																							<DataTrigger Binding="{PluginSettings Plugin=GameActivity, Path=HasData}" Value="True">
																								<Setter Property="SelectedIndex" Value="3"/>
																							</DataTrigger>
																							<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="True">
																								<Setter Property="SelectedIndex" Value="0"/>
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</TabControl.Style>
																				<TabItem >
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">
																							<Label Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text="{DynamicResource LOCGameViewSSExpanderItemTitle}" Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}" Margin="4,0,0,0" />
																						</StackPanel>
																					</TabItem.Header>
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Visible" />
																							<Style.Triggers>
																								<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationList}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginStatus Plugin=playnite-successstory-plugin, Status=Installed}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>
																					<ContentControl x:Name="SuccessStory_PluginList" Margin="8,16,8,8" MinHeight="115" MaxHeight="500" />
																				</TabItem>
																				<TabItem>
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">																			
																							<Label Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text="{DynamicResource LOCGameViewSSTimeLineExpanderItem}" Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}" Margin="4,0,0,0" />
																						</StackPanel>
																					</TabItem.Header>																		
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Visible" />
																							<Style.Triggers>
																								<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationChart}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginStatus Plugin=playnite-successstory-plugin, Status=Installed}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>
																					<ContentControl x:Name="SuccessStory_PluginChart" Margin="8,16,8,8" MinHeight="115" MaxHeight="500"/>
																				</TabItem>
																				<TabItem>
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">																			
																							<Label Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text="{DynamicResource LOCGameViewSSUserStatsExpanderItem}" Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}" Margin="4,0,0,0" />
																						</StackPanel>
																					</TabItem.Header>																		
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Visible" />
																							<Style.Triggers>
																								<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=HasData}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginSettings Plugin=SuccessStory, Path=EnableIntegrationUserStats}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginStatus Plugin=playnite-successstory-plugin, Status=Installed}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>
																					<ContentControl x:Name="SuccessStory_PluginUserStats" Margin="8,16,8,8" MinHeight="115" MaxHeight="500"/>
																				</TabItem>
																				<TabItem>
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">																			
																							<Label Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text="{DynamicResource LOCGameViewGALastSessionExpanderItem}" Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}" Margin="4,0,0,0" />
																						</StackPanel>
																					</TabItem.Header>																		
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Visible" />
																							<Style.Triggers>
																								<DataTrigger Binding="{PluginSettings Plugin=GameActivity, Path=HasDataLog}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginSettings Plugin=GameActivity, Path=EnableIntegrationChartLog}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginStatus Plugin=playnite-gameactivity-plugin, Status=Installed}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>
																					<ContentControl x:Name="GameActivity_PluginChartLog" Margin="12,16,8,8" MinHeight="165" MaxHeight="550"/>
																				</TabItem>
																				<TabItem>
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">																			
																							<Label Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text="{DynamicResource LOCGameViewGATimeSessionExpanderItem}" Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}" Margin="4,0,0,0" />
																						</StackPanel>
																					</TabItem.Header>																		
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Visible" />
																							<Style.Triggers>
																								<DataTrigger Binding="{PluginSettings Plugin=GameActivity, Path=HasData}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginSettings Plugin=GameActivity, Path=EnableIntegrationChartTime}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginStatus Plugin=playnite-gameactivity-plugin, Status=Installed}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>
																					<ContentControl x:Name="GameActivity_PluginChartTime" Margin="12,16,8,8" MinHeight="165" MaxHeight="550"/>
																				</TabItem>
																				<TabItem x:Name="eMnScreenShotsTab">
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">																			
																							<Label Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text="{DynamicResource LOCSsvTitle}" Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}" Margin="4,0,0,0" />
																						</StackPanel>
																					</TabItem.Header>																		
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Collapsed" />
																							<Style.Triggers>
																								<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowSinglePicture}" Value="True">
																									<Setter Property="Visibility" Value="Visible" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowPictures}" Value="True">
																									<Setter Property="Visibility" Value="Visible" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowPicturesVertical}" Value="True">
																									<Setter Property="Visibility" Value="Visible" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginStatus Plugin=playnite-screenshotsvisualizer-plugin, Status=Installed}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>
																					<Grid>
																						<Grid>
																							<Grid.Style>
																								<Style TargetType="Grid">
																									<Setter Property="Visibility" Value="Collapsed" />
																									<Style.Triggers>
																										<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowSinglePicture}" Value="True">
																											<Setter Property="Visibility" Value="Visible" />
																										</DataTrigger>
																										<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowPictures}" Value="True">
																											<Setter Property="Visibility" Value="Collapsed" />
																										</DataTrigger>
																										<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowPicturesVertical}" Value="True">
																											<Setter Property="Visibility" Value="Collapsed" />
																										</DataTrigger>
																										<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData}" Value="False">
																											<Setter Property="Visibility" Value="Collapsed" />
																										</DataTrigger>
																									</Style.Triggers>
																								</Style>
																							</Grid.Style>
																							<ContentControl x:Name="ScreenshotsVisualizer_PluginSinglePicture"  
																								Margin="12,16,8,8" MinHeight="165" MaxHeight="550" Background="{DynamicResource WindowBackgourndBrush}"/>
																						</Grid>															
																						<Grid>
																							<Grid.Style>
																								<Style TargetType="Grid">
																									<Setter Property="Visibility" Value="Collapsed" />
																									<Style.Triggers>
																										<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowPictures}" Value="True">
																											<Setter Property="Visibility" Value="Visible" />
																										</DataTrigger>
																										<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=EnableIntegrationShowPicturesVertical}" Value="True">
																											<Setter Property="Visibility" Value="Collapsed" />
																										</DataTrigger>
																										<DataTrigger Binding="{PluginSettings Plugin=ScreenshotsVisualizer, Path=HasData}" Value="False">
																											<Setter Property="Visibility" Value="Collapsed" />
																										</DataTrigger>
																									</Style.Triggers>
																								</Style>
																							</Grid.Style>
																							<ContentControl x:Name="ScreenshotsVisualizer_PluginListScreenshots"
																								Margin="12,16,8,8" MinHeight="165" MaxHeight="550" Background="{DynamicResource WindowBackgourndBrush}"/>
																						</Grid>															
																						<ContentControl x:Name="ScreenshotsVisualizer_PluginListScreenshotsVertical"
																							Margin="12,16,8,8" Height="{DynamicResource SvVerticalListHeight}" Background="{DynamicResource WindowBackgourndBrush}"/>
																					</Grid>
																				</TabItem>
																				<TabItem>
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">																			
																							<Label Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text="{DynamicResource LOCStoreScreenShotsTitle}" Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}" Margin="4,0,0,0" />
																						</StackPanel>
																					</TabItem.Header>																		
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Collapsed" />
																							<Style.Triggers>
																								<DataTrigger Binding="{PluginSettings Plugin=SteamScreenshots, Path=IsControlVisible, FallbackValue=False}" Value="True">
																									<Setter Property="Visibility" Value="Visible" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>
																					<Grid Margin="275,12,275,12">													
																						<ContentControl x:Name="SteamScreenshots_SteamScreenshotsViewControl" />
																					</Grid>
																				</TabItem>
																				<TabItem>
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">																			
																							<Label Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text=" Hltb"  Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}"/>
																						</StackPanel>
																					</TabItem.Header>																		
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Visible" />
																							<Style.Triggers>
																							<DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=HasData}" Value="False">
																								<Setter Property="Visibility" Value="Collapsed" />
																							</DataTrigger>
																							<DataTrigger Binding="{PluginSettings Plugin=HowLongToBeat, Path=EnableIntegrationViewItem}" Value="False">
																								<Setter Property="Visibility" Value="Collapsed" />
																							</DataTrigger>
																							<DataTrigger Binding="{PluginStatus Plugin=playnite-howlongtobeat-plugin, Status=Installed}" Value="False">
																								<Setter Property="Visibility" Value="Collapsed" />
																							</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>																			
																					<GridEx Margin="10,10,16,10" ColumnCount="3" StarColumns="1"
																							RowCount="6" AutoLayoutColumns="3" >

																						<GridEx.ColumnDefinitions>
																							<ColumnDefinition Width="Auto" /> 
																							<ColumnDefinition Width="Auto" /> 
																							<ColumnDefinition Width="Auto" /> 
																							<ColumnDefinition Width="Auto" /> 
																							<ColumnDefinition Width="Auto" /> 
																							<ColumnDefinition Width="*" /> 	
																						</GridEx.ColumnDefinitions>	
																						
																						<Label Content="" FontFamily="{StaticResource FontIcoFont}" 
																							Foreground="{PluginSettings Plugin=HowLongToBeat, Path=ColorFirst}" 
																							FontSize="{DynamicResource FontSizeLarger}" Margin="40,0,24,0"/>
																						<Label Content="{DynamicResource LOCHowLongToBeatMainStory}" Foreground="{DynamicResource TextBrush}"  
																							FontFamily="Corbel"  Typography.Capitals="SmallCaps" FontSize="{DynamicResource FontSizeLarger}"/>
																						<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=MainStoryFormat}"   FontFamily="Corbel"  
																							FontSize="{DynamicResource FontSizeLarger}" VerticalAlignment="Center" Margin="10,6,0,0"/>
																						
																						<Label Content="" FontFamily="{StaticResource FontIcoFont}" 
																							Foreground="{PluginSettings Plugin=HowLongToBeat, Path=ColorSecond}" 
																							FontSize="{DynamicResource FontSizeLarger}" Margin="40,0,24,0"/>
																						<Label Content="{DynamicResource LOCHowLongToBeatMainExtra}" Foreground="{DynamicResource TextBrush}"   
																							FontFamily="Corbel"  Typography.Capitals="SmallCaps" FontSize="{DynamicResource FontSizeLarger}"/>
																						<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=MainExtraFormat}"   FontFamily="Corbel"
																							FontSize="{DynamicResource FontSizeLarger}" VerticalAlignment="Center" Margin="10,6,0,0"/>

																						<Label Content="" FontFamily="{StaticResource FontIcoFont}" 
																							Foreground="{PluginSettings Plugin=HowLongToBeat, Path=ColorThird}" 
																							FontSize="{DynamicResource FontSizeLarger}" Margin="40,0,24,0"/>										
																						<Label Content="{DynamicResource LOCHowLongToBeatCompletionist}" Foreground="{DynamicResource TextBrush}"   
																							FontFamily="Corbel"  Typography.Capitals="SmallCaps" FontSize="{DynamicResource FontSizeLarger}"/>
																						<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=CompletionistFormat}"   FontFamily="Corbel"
																							FontSize="{DynamicResource FontSizeLarger}" VerticalAlignment="Center" Margin="10,6,0,0"/>

																						<Label Content="" FontFamily="{StaticResource FontIcoFont}"
																							Foreground="{PluginSettings Plugin=HowLongToBeat, Path=ColorFirstMulti}" 
																							FontSize="{DynamicResource FontSizeLarger}" Margin="40,0,24,0"/>
																						<Label Content="{DynamicResource LOCHowLongToBeatSolo}" Foreground="{DynamicResource TextBrush}" 
																							FontFamily="Corbel"  Typography.Capitals="SmallCaps" FontSize="{DynamicResource FontSizeLarger}"/>
																						<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=SoloFormat}" 
																							FontSize="{DynamicResource FontSizeLarger}" VerticalAlignment="Center" Margin="10,6,0,0"/>

																						<Label Content="" FontFamily="{StaticResource FontIcoFont}"
																							Foreground="{PluginSettings Plugin=HowLongToBeat, Path=ColorSecondMulti}" 
																							FontSize="{DynamicResource FontSizeLarger}" Margin="40,0,24,0"/>
																						<Label Content="{DynamicResource LOCHowLongToBeatCoOp}" Foreground="{DynamicResource TextBrush}"  
																							 FontFamily="Corbel"  Typography.Capitals="SmallCaps" FontSize="{DynamicResource FontSizeLarger}"/>
																						<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=CoOpFormat}"   FontFamily="Corbel"  
																							FontSize="{DynamicResource FontSizeLarger}" VerticalAlignment="Center" Margin="10,6,0,0"/>

																						<Label Content="" FontFamily="{StaticResource FontIcoFont}"
																							Foreground="{PluginSettings Plugin=HowLongToBeat, Path=ColorThirdMulti}" 
																							FontSize="{DynamicResource FontSizeLarger}" Margin="40,0,24,0"/>
																						<Label Content="{DynamicResource LOCHowLongToBeatVs}" Foreground="{DynamicResource TextBrush}"   
																							FontFamily="Corbel"  Typography.Capitals="SmallCaps" FontSize="{DynamicResource FontSizeLarger}"/>
																						<Label Content="{PluginSettings Plugin=HowLongToBeat, Path=VsFormat}"   FontFamily="Corbel" 
																							FontSize="{DynamicResource FontSizeLarger}" VerticalAlignment="Center" Margin="10,6,0,0"/>
																					</GridEx>
																				</TabItem>
																				<TabItem>
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">																			
																							<Label Margin="0,0,4,0" Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text="{DynamicResource LOCReview_Viewer_ReviewsLabel}"  Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}"/>
																						</StackPanel>
																					</TabItem.Header>																		
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Collapsed" />
																							<Style.Triggers>
																								<DataTrigger Binding="{PluginSettings Plugin=ReviewViewer, Path=IsControlVisible, FallbackValue=False}" Value="True">
																									<Setter Property="Visibility" Value="Visible" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginStatus Plugin=Review_Viewer_ca24e37a-76d9-49bf-89ab-d3cba4a54bd1, Status=Installed}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>
																					<ContentControl x:Name="ReviewViewer_ReviewsControl" Margin="0,15,0,0" />
																				</TabItem>
																				<TabItem>
																					<TabItem.Header>
																						<StackPanel Orientation="Horizontal">																			
																							<Label Content="" FontFamily="{StaticResource FontIcoFont}" Foreground="{DynamicResource GlyphBrush}" />
																							<TextBlock Text="{DynamicResource LOCGameViewNVLatestNewsExpanderItem}" Typography.Capitals="SmallCaps" Foreground="{DynamicResource TextBrushAlt}" Margin="4,0,0,0" />
																						</StackPanel>
																					</TabItem.Header>																		
																					<TabItem.Style>
																						<Style TargetType="{x:Type TabItem}"  BasedOn="{StaticResource {x:Type TabItem}}">
																							<Setter Property="Visibility" Value="Visible" />
																							<Style.Triggers>
																								<DataTrigger Binding="{PluginSettings Plugin=NewsViewer, Path=ReviewsAvailable}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																								<DataTrigger Binding="{PluginStatus Plugin=NewsViewer_15e03ffe-90f6-4e8e-bd4d-94514777481d, Status=Installed}" Value="False">
																									<Setter Property="Visibility" Value="Collapsed" />
																								</DataTrigger>
																							</Style.Triggers>
																						</Style>
																					</TabItem.Style>
																					<ContentControl x:Name="NewsViewer_NewsViewerControl" Margin="0,15,0,0" />
																				</TabItem>
																			</TabControl>
																			<Grid>
																				<Grid.Style>
																					<Style TargetType="Grid">
																						<Setter Property="Control.Visibility" Value="Collapsed"/>
																						<Style.Triggers>
																							<DataTrigger Binding="{Binding ElementName=ExpanderTabControl, Path=SelectedIndex}" Value="0">
																								<Setter Property="Control.Visibility" Value="Visible"/>
																							</DataTrigger>
																							<DataTrigger Binding="{Binding ElementName=ExpanderTabControl, Path=SelectedIndex}" Value="1">
																								<Setter Property="Control.Visibility" Value="Visible"/>
																							</DataTrigger>
																							<DataTrigger Binding="{Binding ElementName=ExpanderTabControl, Path=SelectedIndex}" Value="2">
																								<Setter Property="Control.Visibility" Value="Visible"/>
																							</DataTrigger>
																						</Style.Triggers>
																					</Style>
																				</Grid.Style>
																				<ContentControl x:Name="SuccessStory_PluginProgressBar" Margin="12,12,12,8" Height="30" />
																			</Grid>
																		</StackPanel>
																	</Grid>
																</StackPanel>
															</Expander.Content>
														</Expander>
														
													</StackPanel>
													<GridEx Margin="2,0,2,8" 
														ColumnCount="2" StarColumns="1"
														RowCount="38" AutoLayoutColumns="2">

														<StackPanel MinWidth="{DynamicResource GridLeftColumnMinWidth}">
															<StackPanel.Style>
																<Style TargetType="StackPanel">
																	<Setter Property="Visibility" Value="Collapsed" />
																	<Style.Triggers>
																		<DataTrigger Binding="{Binding ElementName=GdDetailCheck, Path=IsChecked}" Value="True">
																			<Setter Property="Visibility" Value="Visible" />
																		</DataTrigger>
																	</Style.Triggers>
																</Style>
															</StackPanel.Style>

															<Grid Margin="5,5,5,5"  >
																<Border Background="{DynamicResource WindowBackgourndBrush}" Opacity="{DynamicResource DetailPanelOpacity}" CornerRadius="{DynamicResource ControlCornerRadius}" />
																<StackPanel Width="{Binding ActualWidth, ElementName=parentElementName}" MaxWidth="340">
																	
																	<Grid Margin="8,10,8,0">
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="36"/>
																			<ColumnDefinition Width="*"/>
																		</Grid.ColumnDefinitions>
																	
																		<Label Grid.Column="0" Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="21" Margin="0,4,0,0"
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{DynamicResource LOCGameDetails}" 
																			Typography.Capitals="AllSmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLargest}"/>
																	</Grid>
																	<Separator Background="{DynamicResource PanelSeparatorBrush}" Margin="8,3,8,3" Name="GdSeparatorDetails"
																		Visibility="{Binding ElementName=GdSeparatorCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
																	<Grid HorizontalAlignment="Center" Width="Auto" Margin="0,0,0,5" >	
																		<Image Name="PART_ImageIcon" Height="{Binding ElementName=eMixedGridIconHeight, Path=Value}"
																			RenderOptions.BitmapScalingMode="Fant" />															
																	</Grid>
																			
																	<GridEx HorizontalAlignment="Center"  Margin="8,8,8,8" StarColumns="1" RowCount="38" >
																		<GridEx.Style>
																			<Style TargetType="GridEx">
																				<Style.Triggers>
																					<DataTrigger Binding="{Binding ElementName=GdDetailColumnCheck, Path=IsChecked}" Value="True">
																						<Setter Property="ColumnCount" Value="1" />
																						<Setter Property="AutoLayoutColumns" Value="1" />
																					</DataTrigger>
																					<DataTrigger Binding="{Binding ElementName=GdDetailColumnCheck, Path=IsChecked}" Value="False">
																						<Setter Property="ColumnCount" Value="2" />
																						<Setter Property="AutoLayoutColumns" Value="2" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</GridEx.Style>
																		<Grid.Resources>
																			<Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextBlockStyle}" />
																			<Style TargetType="ItemsControl">
																				<Setter Property="VerticalAlignment" Value="Center" />
																				<Setter Property="HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}" />
																			</Style>
																			<Style TargetType="Label" BasedOn="{StaticResource {x:Type Label}}">
																				<Setter Property="Margin" Value="0,4,8,4" />
																				<Setter Property="VerticalAlignment" Value="Top" />
																				<Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
																				<Setter Property="FontFamily" Value="Corbel" />
																				<Setter Property="Typography.Capitals" Value="AllSmallCaps" />
																				<Setter Property="FontSize" Value="18" />
																				<Setter Property="HorizontalAlignment" Value="{DynamicResource GridGameDetailsLabelHorizontalAlignment}" />
																			</Style>
																			<Style TargetType="Button" BasedOn="{StaticResource PropertyItemButton}" >
																				<Setter Property="VerticalAlignment" Value="Center" />
																				<Setter Property="HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}" />
																			</Style>
																		</Grid.Resources>
																		
																		<Label Name="PART_ElemUserScore" Content="{DynamicResource LOCUserScore}" />
																		<TextBlock Name="PART_TextUserScore" VerticalAlignment="Center" HorizontalAlignment="{DynamicResource GridGameDetailsValueHorizontalAlignment}"
																				Style="{DynamicResource TextBlockGameScore}" Margin="0,4,0,0" />
																		
																		<Label Name="PART_ElemCriticScore" Content="{DynamicResource LOCCriticScore}" />
																		<TextBlock Name="PART_TextCriticScore" VerticalAlignment="Center" HorizontalAlignment="{DynamicResource GridGameDetailsValueHorizontalAlignment}"
																				Style="{DynamicResource TextBlockGameScore}" Margin="0,4,0,0"/>
																		
																		<Label Name="PART_ElemCommunityScore" Content="{DynamicResource LOCCommunityScore}" />
																		<TextBlock Name="PART_TextCommunityScore" VerticalAlignment="Center" HorizontalAlignment="{DynamicResource GridGameDetailsValueHorizontalAlignment}"
																				Style="{DynamicResource TextBlockGameScore}" Margin="0,4,0,0"/>

																		<Label Name="PART_ElemPlatform" Content="{DynamicResource LOCPlatformTitle}" />
																		<ItemsControl Name="PART_ItemsPlatforms" Margin="0,4,0,0" />
																		
																		<Label Name="PART_ElemLibrary" Content="{DynamicResource LOCGameProviderTitle}" />
																		<Button Name="PART_ButtonLibrary" Margin="0,4,0,0" />
																		
																		<Label Name="PART_ElemReleaseDate" Content="{DynamicResource LOCGameReleaseDateTitle}" />
																		<Button Name="PART_ButtonReleaseDate" VerticalAlignment="Center" Margin="0,4,0,0"/>
																		
																		<Label Name="PART_ElemDevelopers" Content="{DynamicResource LOCDeveloperLabel}" />
																		<StackPanel Margin="0,4,0,0" >
																			<ItemsControl Name="PART_ItemsDevelopers">
																				<ItemsControl.ItemContainerStyle>
																					<Style TargetType="ContentPresenter">
																						<Setter Property="FrameworkElement.HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}"/>
																					</Style>
																				</ItemsControl.ItemContainerStyle>
																			</ItemsControl>
																		</StackPanel>

																		<Label Name="PART_ElemPublishers" Content="{DynamicResource LOCPublisherLabel}" />
																		<StackPanel Margin="0,4,0,0" >
																			<ItemsControl Name="PART_ItemsPublishers">
																				<ItemsControl.ItemContainerStyle>
																					<Style TargetType="ContentPresenter">
																						<Setter Property="FrameworkElement.HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}"/>
																					</Style>
																				</ItemsControl.ItemContainerStyle>
																			</ItemsControl>
																		</StackPanel>

																		<Label Name="PART_ElemGenres" Content="{DynamicResource LOCGenreLabel}" />
																		<StackPanel Margin="0,4,0,0" >
																			<ItemsControl Name="PART_ItemsGenres" >
																				<ItemsControl.ItemContainerStyle>
																					<Style TargetType="ContentPresenter">
																						<Setter Property="FrameworkElement.HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}"/>
																					</Style>
																				</ItemsControl.ItemContainerStyle>
																			</ItemsControl>
																		</StackPanel>

																		<Label Name="PART_ElemCategories" Content="{DynamicResource LOCGameCategoriesTitle}" />
																		<StackPanel Margin="0,4,0,0" >
																			<ItemsControl Name="PART_ItemsCategories" >
																				<ItemsControl.ItemContainerStyle>
																					<Style TargetType="ContentPresenter">
																						<Setter Property="FrameworkElement.HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}"/>
																					</Style>
																				</ItemsControl.ItemContainerStyle>
																			</ItemsControl>
																		</StackPanel>

																		<Label Name="PART_ElemFeatures" Content="{DynamicResource LOCFeaturesLabel}" />
																		<StackPanel Margin="0,4,0,0" >
																			<ItemsControl Name="PART_ItemsFeatures">
																				<ItemsControl.ItemContainerStyle>
																					<Style TargetType="ContentPresenter">
																						<Setter Property="FrameworkElement.HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}"/>
																					</Style>
																				</ItemsControl.ItemContainerStyle>
																			</ItemsControl>
																		</StackPanel>

																		<Label Name="PART_ElemTags" Content="{DynamicResource LOCTagsLabel}" />
																		<StackPanel Margin="0,4,0,0" >
																			<ItemsControl Name="PART_ItemsTags">
																				<ItemsControl.ItemContainerStyle>
																					<Style TargetType="ContentPresenter">
																						<Setter Property="FrameworkElement.HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}"/>
																					</Style>
																				</ItemsControl.ItemContainerStyle>
																			</ItemsControl>
																		</StackPanel>

																		<Label Name="PART_ElemAgeRating" Content="{DynamicResource LOCAgeRatingLabel}" />
																		<StackPanel Margin="0,4,0,0" >
																			<ItemsControl Name="PART_ItemsAgeRatings">
																				<ItemsControl.ItemContainerStyle>
																					<Style TargetType="ContentPresenter">
																						<Setter Property="FrameworkElement.HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}"/>
																					</Style>
																				</ItemsControl.ItemContainerStyle>
																			</ItemsControl>
																		</StackPanel>

																		<Label Name="PART_ElemSeries" Content="{DynamicResource LOCSeriesLabel}" />
																		<StackPanel Margin="0,4,0,0" >
																			<ItemsControl Name="PART_ItemsSeries">
																				<ItemsControl.ItemContainerStyle>
																					<Style TargetType="ContentPresenter">
																						<Setter Property="FrameworkElement.HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}"/>
																					</Style>
																				</ItemsControl.ItemContainerStyle>
																			</ItemsControl>
																		</StackPanel>

																		<Label Name="PART_ElemRegion" Content="{DynamicResource LOCRegionLabel}" />
																		<StackPanel Margin="0,4,0,0" >
																			<ItemsControl Name="PART_ItemsRegions" >
																				<ItemsControl.ItemContainerStyle>
																					<Style TargetType="ContentPresenter">
																						<Setter Property="FrameworkElement.HorizontalAlignment" Value="{DynamicResource GridGameDetailsValueHorizontalAlignment}"/>
																					</Style>
																				</ItemsControl.ItemContainerStyle>
																			</ItemsControl>
																		</StackPanel>

																		<Label Name="PART_ElemVersion" Content="{DynamicResource LOCVersionLabel}" />
																		<Button Name="PART_ButtonVersion" Margin="0,4,0,0" />
																		
																		<Label Name="PART_ElemInstallSize" Content="{DynamicResource LOCInstallSizeLabel}" />
																		<TextBlock Name="PART_TextInstallSize" VerticalAlignment="Center" HorizontalAlignment="{DynamicResource GridGameDetailsValueHorizontalAlignment}"
																				Style="{DynamicResource TextBlockGameScore}" Margin="0,4,0,0" />
																	</GridEx>															
																</StackPanel>
															</Grid>	
														</StackPanel>

														<StackPanel>
															<Grid Margin="5,5,5,5" Name="PART_ElemNotes">
																<Border Background="{DynamicResource WindowBackgourndBrush}" Opacity="{DynamicResource DetailPanelOpacity}" CornerRadius="{DynamicResource ControlCornerRadius}" />
																<StackPanel >									
																	<Grid Margin="8,10,8,0">
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="36"/>
																			<ColumnDefinition Width="*" />
																		</Grid.ColumnDefinitions>
																	
																		<Label Grid.Column="0" Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="21" Margin="0,4,0,0"
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{DynamicResource LOCNotesLabel}" 
																			Typography.Capitals="AllSmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLargest}"/>
																	</Grid>
																	<Separator Background="{DynamicResource PanelSeparatorBrush}" Margin="8,3,8,3"
																		Visibility="{Binding ElementName=GdSeparatorCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
																	<TextBox Name="PART_TextNotes" IsReadOnly="True"
																		BorderThickness="0"
																		AcceptsReturn="True" TextWrapping="Wrap"
																		FontFamily="{DynamicResource FontFamily}" 
																		UseLayoutRounding="False" 
																		ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="8,8,8,8"/>
																</StackPanel>
															</Grid>
															
															<Expander x:Name="PlayNotes_Expander" IsExpanded="False"
																Margin="5,5,5,5" Visibility="{PluginStatus Plugin=PlayNotes_4208657d-4f78-42d2-968f-39f24de275e1, Status=Installed}">
																<Expander.Header>
																	<Grid Margin="-8,0,0,0">
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="36"/>
																			<ColumnDefinition Width="*" />
																		</Grid.ColumnDefinitions>
																	
																		<Label Grid.Column="0" Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="21" Margin="0,4,0,0"
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{DynamicResource LOCGameViewPlayNotesTitle}" 
																			Typography.Capitals="AllSmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLargest}"/>
																	</Grid>
																</Expander.Header>
																	<Grid Margin="12,5,12,12">
																		<ContentControl x:Name="PlayNotes_NotesViewerControl" />
																	</Grid>
															</Expander>
															
															<Grid>
																<Grid.Style>
																	<Style TargetType="Grid">
																		<Setter Property="Control.Visibility" Value="Collapsed" />
																		<Setter Property="Margin" Value="0,0,0,0" />
																		<Style.Triggers>
																			<MultiDataTrigger>
																				<MultiDataTrigger.Conditions>
																					<Condition Binding="{PluginStatus Plugin=GameRelations_a4c15d63-9ab4-4d96-9a0c-8f9b35d43a1f, Status=Installed}" Value="True" />
																					<Condition Binding="{Binding ElementName=GameRelationsVisibilityProxy, Path=Tag}" Value="Visible" />
																				</MultiDataTrigger.Conditions>
																				<Setter Property="Control.Visibility" Value="Visible" />
																				<Setter Property="Margin" Value="5,5,5,5" />
																			</MultiDataTrigger>
																		</Style.Triggers>
																	</Style>
																</Grid.Style>
																<Border Background="{DynamicResource WindowBackgourndBrush}" Opacity="{DynamicResource DetailPanelOpacity}" CornerRadius="{DynamicResource ControlCornerRadius}" />
																<StackPanel>
																	<Grid Margin="8,10,8,0">
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="36"/>
																			<ColumnDefinition Width="*" />
																		</Grid.ColumnDefinitions>
																		<Label Grid.Column="0" Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="21" Margin="0,4,0,0"
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{DynamicResource LOCGameRelations_RelatedGamesLabel}" 
																			Typography.Capitals="AllSmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLargest}"/>
																	</Grid>
																	<Separator Background="{DynamicResource PanelSeparatorBrush}" Margin="8,3,8,3"
																		Visibility="{Binding ElementName=GdSeparatorCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
																	<StackPanel Margin="10,0,10,15">
																		<TextBlock x:Name="GameRelationsVisibilityProxy" Visibility="Collapsed">
																			<TextBlock.Style>
																				<Style TargetType="TextBlock">
																					<Setter Property="Tag" Value="Collapsed" />
																					<Style.Triggers>
																						<DataTrigger Binding="{Binding ElementName=Panel_GameRelations_SimilarGamesControl, Path=Visibility}" Value="Visible">
																							<Setter Property="Tag" Value="Visible" />
																						</DataTrigger>
																						<DataTrigger Binding="{Binding ElementName=Panel_GameRelations_SameSeriesControl, Path=Visibility}" Value="Visible">
																							<Setter Property="Tag" Value="Visible" />
																						</DataTrigger>
																						<DataTrigger Binding="{Binding ElementName=Panel_GameRelations_SameDeveloperControl, Path=Visibility}" Value="Visible">
																							<Setter Property="Tag" Value="Visible" />
																						</DataTrigger>
																						<DataTrigger Binding="{Binding ElementName=Panel_GameRelations_SamePublisherControl, Path=Visibility}" Value="Visible">
																							<Setter Property="Tag" Value="Visible" />
																						</DataTrigger>
																					</Style.Triggers>
																				</Style>
																			</TextBlock.Style>
																		</TextBlock>
																		<Expander x:Name="Panel_GameRelations_SimilarGamesControl"
																					  Header="{DynamicResource LOCGameRelations_SimilarGamesLabel}"
																					  IsExpanded="False"
																					  Margin="0,5,0,0"
																					  Visibility="{PluginSettings Plugin=GameRelations, Path=SimilarGamesControlSettings.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
																			<ContentControl x:Name="GameRelations_SimilarGamesControl" Margin="10,5,10,10" />
																		</Expander>

																		<Expander x:Name="Panel_GameRelations_SameSeriesControl"
																					  Header="{DynamicResource LOCGameRelations_SameSeriesLabel}"
																					  IsExpanded="False"
																					  Margin="0,5,0,0"
																					  Visibility="{PluginSettings Plugin=GameRelations, Path=SameSeriesControlSettings.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
																			<ContentControl x:Name="GameRelations_SameSeriesControl" Margin="10,5,10,10" />
																		</Expander>

																		<Expander x:Name="Panel_GameRelations_SameDeveloperControl"
																					  Header="{DynamicResource LOCGameRelations_SameDeveloperLabel}"
																					  IsExpanded="False"
																					  Margin="0,5,0,0"
																					  Visibility="{PluginSettings Plugin=GameRelations, Path=SameDeveloperControlSettings.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
																			<ContentControl x:Name="GameRelations_SameDeveloperControl" Margin="10,5,10,10" />
																		</Expander>

																		<Expander x:Name="Panel_GameRelations_SamePublisherControl"
																					  Header="{DynamicResource LOCGameRelations_SamePublisherLabel}"
																					  IsExpanded="False"
																					  Margin="0,5,0,0"
																					  Visibility="{PluginSettings Plugin=GameRelations, Path=SamePublisherControlSettings.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}, FallbackValue=Collapsed}">
																			<ContentControl x:Name="GameRelations_SamePublisherControl" Margin="10,5,10,0" />
																		</Expander>

																	</StackPanel>
																</StackPanel>
															</Grid>

															<Grid Margin="5,5,5,5">
																<Border Background="{DynamicResource WindowBackgourndBrush}" Opacity="{DynamicResource DetailPanelOpacity}" CornerRadius="{DynamicResource ControlCornerRadius}" />
																<StackPanel Name="PART_ElemDescription">									
																	<Grid Margin="8,10,8,0">
																		<Grid.ColumnDefinitions>
																			<ColumnDefinition Width="36"/>
																			<ColumnDefinition Width="*" />
																		</Grid.ColumnDefinitions>
																	
																		<Label Grid.Column="0" Content="" FontFamily="{StaticResource FontIcoFont}" FontSize="21" Margin="0,4,0,0"
																			VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource GlyphBrush}"/>
																		<TextBlock Grid.Column="1" VerticalAlignment="Center" Text="{DynamicResource LOCGameDescriptionTitle}" 
																			Typography.Capitals="AllSmallCaps"
																			Style="{DynamicResource BaseTextBlockStyle}" FontSize="{DynamicResource FontSizeLargest}"/>
																	</Grid>
																	<Separator Background="{DynamicResource PanelSeparatorBrush}" Margin="8,3,8,3"
																		Visibility="{Binding ElementName=GdSeparatorCheck, Path=IsChecked, Converter={StaticResource BooleanToVisibilityConverter}}" />
																	<CheckBox  Name="HtmlThemeColorCheck" IsChecked="{DynamicResource UseHtmlColor}" Visibility="Collapsed" /> 
																	<HtmlTextView x:Name="PART_HtmlDescription" Tag="{DynamicResource TextBrush}"
																			HtmlFontSize="{DynamicResource FontSize}"
																			HtmlFontFamily="{DynamicResource FontFamily}"
																			MinHeight="64" FontSize="{DynamicResource FontSize}" 
																			FontFamily="{DynamicResource FontFamily}" 
																			UseLayoutRounding="False" 
																			ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="8,8,8,8">
																		<HtmlTextView.Style>
																			<Style TargetType="HtmlTextView">
																				<Setter Property="HtmlForeground" Value="{DynamicResource HtmlTextColor}" />
																				<Setter Property="LinkForeground" Value="{DynamicResource HtmlLinkColor}" />
																				<Style.Triggers>																				
																					<DataTrigger Binding="{Binding ElementName=HtmlThemeColorCheck, Path=IsChecked}" Value="True">	
																						<Setter Property="HtmlForeground" Value="{DynamicResource TextColor}" />
																						<Setter Property="LinkForeground" Value="{DynamicResource GlyphColor}" />
																					</DataTrigger>
																				</Style.Triggers>
																			</Style>
																		</HtmlTextView.Style>
																	</HtmlTextView>
																</StackPanel>
															</Grid>															
														</StackPanel>
													</GridEx>
												</StackPanel>
											</DockPanel>
										</DockPanel>
									</Grid>
								</Grid> 
							</DockPanel>
						</Border>
					</ScrollViewer>                   
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>